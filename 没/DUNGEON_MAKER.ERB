;基本的にTBとFLAGを用いて管理する。よく考えたら組み込まれるもんなんだし、三次元配列ひとつくらい,占有させてもらっても問題ないことに気づいたのでTBもらっちゃいます
;あと、SAVESTRを2000に増やしました。そして900~1999まで使ってます…ほんとはSTRだったんだけど、消えるのを思い出したのであわてて変更
;第ニ配列と第三配列は基本的にX/Y座標を定義
;第一配列
;		 0~24:階層0〜24のタイル情報を保存
;		25~49:イベント設置情報を管理
;		50~74:各階のイベント内容フラグ（TB:階層:イベント番号：イベント内容）となる
;				第三引数は0:イベントの種類、1:ワープ系X座標・宝箱の中身の量.2:ワープ系Y座標,3:ワープ系Z座標、20~24:使用フラグを示す
;		75~79:フラグ0~99を示す
;				0:使用済みかどうか 1:セットされてるフラグのX座標、2:同じくY座標、3;同じくZ座標 4;イベント番号
;		300:どういう拡張するかわかんないし、最後の位置は300に
;1000は特殊
;		300:0:0 = メーカー内の現Mというか表示ページ
;		300:0:1 = タイル設置・イベント設置モード識別フラグ
;		300:0:2 = 設置マス指定フラグ
;		300:0:3 = LINE強調X
;		300:0:4 = LINE強調Y
;		300:1:0~24 = それぞれの階層の最大X 
;		300:2:0~24 = それぞれの階層の最大Y
;		300:3:0 = 出力認識フラグ
;LOCAL　X座標担当　LOCAL:1　Y座標担当

@DM_現M(ARG)
#FUNCTION
RETURNF TB:300:0:0

@CHANGE_DM_現M(ARG)
SIF ARG > 24
	ARG = 24
SIF ARG < 0
	ARG = 0
TB:300:0:0 = ARG
RETURN 0

@DM_MODE(ARG)
#FUNCTION
RETURNF TB:300:0:1

@CHANGE_DM_MODE(ARG)
TB:300:0:1 = ARG
RETURN ARG

@DM_TILE_TYPE(ARG)
#FUNCTION
RETURNF TB:300:0:2

@CHANGE_DM_TILE_TYPE(ARG)
TB:300:0:2 = ARG
RETURN ARG

@DM_LINE_X(ARG)
#FUNCTION
RETURNF TB:300:0:3

@CHANGE_DM_LINE_X(ARG)
TB:300:0:3 = ARG
RETURN ARG

@DM_LINE_Y(ARG)
#FUNCTION
RETURNF TB:300:0:4

@CHANGE_DM_LINE_Y(ARG)
TB:300:0:4 = ARG
RETURN ARG

@DM_SIZE_X(ARG)
#FUNCTION
RETURNF TB:300:1:(DM_現M(ARG))

@CHANGE_DM_SIZE_X(ARG)
SIF ARG > 20
	ARG = 20
SIF ARG < 1
	ARG = 1
TB:300:1:(DM_現M(ARG)) = ARG
RETURN ARG

@DM_SIZE_Y(ARG)
#FUNCTION
RETURNF TB:300:2:(DM_現M(ARG))

@CHANGE_DM_SIZE_Y(ARG)
SIF ARG > 20
	ARG = 20
SIF ARG < 1
	ARG = 1
TB:300:2:(DM_現M(ARG)) = ARG
RETURN ARG

@DM_TILE(ARG,ARG:1)
#FUNCTION
RETURNF TB:DM_現M(ARG):ARG:(ARG:1)

@CHANGE_DM_TILE(ARG,ARG:1,ARG:2)
TB:DM_現M(ARG):ARG:(ARG:1) = ARG:2
RETURN ARG

@DM_EVENT(ARG,ARG:1)
#FUNCTION
RETURNF TB:(DM_現M(ARG)+25):ARG:(ARG:1)

@CHANGE_DM_EVENT(ARG,ARG:1,ARG:2)
TB:(DM_現M(ARG)+25):ARG:(ARG:1) = ARG:2
RETURN ARG

@DM_EVENT_CONTENTS(ARG,ARG:1)
;ARGはイベント番号、ARG:1はイベント内容のフラグ
#FUNCTION
RETURNF TB:(DM_現M(0)+50):ARG:(ARG:1)

@CHANGE_DM_EVENT_CONTENTS(ARG,ARG:1,ARG:2)
TB:(DM_現M(0)+50):ARG:(ARG:1) = ARG:2
RETURN ARG

@DM_EVENT_MESSAGE(ARG,ARG:1)
;ARGはイベント番号、ARG:1は0と1で2種類あるのを示す
#FUNCTIONS
RETURNF SAVESTR:(1000 + DM_現M(0)*20 + ARG + ARG:1*500)

@CHANGE_DM_EVENT_MESSAGE(ARG,ARG:1,ARGS)
SAVESTR:(1000 + DM_現M(0)*20 + ARG + ARG:1*500) = %ARGS%
RETURN ARG

@DM_FLAG(ARG,ARG:1)
;ARGはフラグ番号、ARG:1はフラグ内容
#FUNCTION
RETURNF TB:(ARG/20+75):(ARG%20):(ARG:1)

@CHANGE_DM_FLAG(ARG,ARG:1,ARG:2)
TB:(ARG/20+75):(ARG%20):(ARG:1) = ARG:2
RETURN ARG

@DM_FLAG_MESSAGE(ARG)
#FUNCTIONS
RETURNF SAVESTR:(900+ARG)

@CHANGE_DM_FLAG_MESSAGE(ARG,ARGS)
SAVESTR:(900+ARG) = %ARGS%
RETURN ARG

@SHOW_DM_FLAGLIST
LOCAL = 0
FOR COUNT,0,100
	IF DM_FLAG(COUNT,0)
		SETCOLOR 0x990000
		LOCAL += 1
	ENDIF
	PRINTFORM [{COUNT,2}] 
	SIF COUNT%10 == 9
		PRINTL 
	RESETCOLOR
NEXT
IF LOCAL >= 100
	PRINTFORMW フラグがいっぱいです！
	RETURN -1
ENDIF
INPUT
SIF RESULT < 0 || RESULT > 99
	RESTART
IF DM_FLAG(RESULT,0)
	PRINTFORMW すでに使用されているフラグです！
	RESTART
ENDIF
CLEARLINE 11
RETURN RESULT

@SHOW_DM_FLAGLIST2
FOR COUNT,0,100
	IF DM_FLAG(COUNT,0)
		IF DM_FLAG(COUNT,4) == 0
			CALL CHANGE_DM_FLAG(COUNT, 0, 0)
			CALL CHANGE_DM_FLAG_MESSAGE(COUNT, "")
		ELSE
			PRINTFORML [{COUNT,2}] 階層{DM_FLAG(COUNT,3)}のEV{DM_FLAG(COUNT,4)}({DM_FLAG(COUNT,1)}/{DM_FLAG(COUNT,2)}） %DM_FLAG_MESSAGE(COUNT)%
		ENDIF
	ENDIF
NEXT
WAIT
@DM_DEL_EVENT(ARG,ARG:1,ARG:2)
;X,Y,イベント番号
FOR COUNT,0,25
	IF COUNT > 19
		FOR COUNT:1,0,25
			CALL CHANGE_DM_FLAG(DM_EVENT_CONTENTS(ARG:2,COUNT),COUNT:1,0)
		NEXT
	ENDIF
	CALL CHANGE_DM_EVENT_CONTENTS(ARG:2,COUNT,0)
NEXT
CALL CHANGE_DM_EVENT_MESSAGE(ARG:2,0,)
CALL CHANGE_DM_EVENT_MESSAGE(ARG:2,1,)
CALL CHANGE_DM_EVENT(ARG,ARG:1,0)

@SHOW_DM_MAP
PRINTFORM 現M {DM_現M(0)} 
PRINTBUTTON "[＋]",5005
PRINTBUTTON "[−]",5006
PRINTL 
PRINTFORM 最大X {DM_SIZE_X(ARG)} 
PRINTBUTTON "[＋]",5001
PRINTBUTTON "[−]",5002
PRINTL 
PRINTFORM 最大Y {DM_SIZE_Y(ARG)} 
PRINTBUTTON "[＋]",5003
PRINTBUTTON "[−]",5004
PRINTL 
PRINT   
FOR LOCAL,0,DM_SIZE_X(ARG)
	;X軸ライン処理ボタン生成
	IF LOCAL % 2== 0
		SETCOLOR 102,255,255
	ELSE
		SETCOLOR 102,255,51
	ENDIF
	LOCALS = {LOCAL,2}
	PRINTBUTTON LOCALS,LOCAL+6000
	RESETCOLOR
NEXT
PRINTL 
FOR LOCAL:1,0,DM_SIZE_Y(ARG)
	;Y軸ライン処理ボタン生成
	IF LOCAL:1 % 2== 0
		SETCOLOR 102,255,255
	ELSE
		SETCOLOR 102,255,51
	ENDIF
	LOCALS = {LOCAL:1,2}
	PRINTBUTTON LOCALS,LOCAL:1+6100
	RESETCOLOR

	FOR LOCAL,0,DM_SIZE_X(ARG)
		;ライン強調フラグONの列は色変更(Y軸)
		IF LOCAL == DM_LINE_X(0)
			IF LOCAL % 2== 0
				SETCOLOR 102,255,255
			ELSE
				SETCOLOR 102,255,51
			ENDIF
		ENDIF
		;ライン強調フラグONの列は色変更(X軸)
		IF LOCAL:1 == DM_LINE_Y(0)
			IF LOCAL:1 % 2== 0
				SETCOLOR 102,255,255
			ELSE
				SETCOLOR 102,255,51
			ENDIF
		ENDIF
		;重なってる時は紫にしてみる
		SIF LOCAL == DM_LINE_X(0) && LOCAL:1 == DM_LINE_Y(0)
			SETCOLOR 102,0,102
		;イベント設置済みマスは赤くする（ライン強調より優先）
		SIF DM_EVENT(LOCAL,LOCAL:1)
			SETCOLOR 0x990000
		;イベント設置モードではイベント番号が表記される
		IF DM_EVENT(LOCAL,LOCAL:1) && DM_MODE(0) == 1
			LOCALS = {DM_EVENT(LOCAL,LOCAL:1),2}
			PRINTBUTTON LOCALS,LOCAL*100+LOCAL:1
		ELSE
			SELECTCASE DM_TILE(LOCAL,LOCAL:1)
				CASE 0
					PRINTBUTTON  "■",LOCAL*100+LOCAL:1
				CASE 1
					PRINTBUTTON   "□",LOCAL*100+LOCAL:1
				CASE 2
					PRINTBUTTON   "扉",LOCAL*100+LOCAL:1
				CASE 3
					PRINTBUTTON   "宝",LOCAL*100+LOCAL:1
				CASE 4
					PRINTBUTTON   "！",LOCAL*100+LOCAL:1
				CASE 5
					PRINTBUTTON   "罠",LOCAL*100+LOCAL:1
				CASE 6
					PRINTBUTTON   "昇",LOCAL*100+LOCAL:1
				CASE 7
					PRINTBUTTON   "降",LOCAL*100+LOCAL:1
				CASE 8
					PRINTBUTTON   "出",LOCAL*100+LOCAL:1
				CASEELSE
					PRINTBUTTON "特",LOCAL*100+LOCAL:1
			ENDSELECT
		ENDIF
		RESETCOLOR
	NEXT
	PRINTL
NEXT
;高さ調整
FOR COUNT,0,20-DM_SIZE_Y(ARG)
	PRINTFORML 
NEXT

@DUNGEON_MAKER
FOR LOCAL:1,0,200,
	FOR LOCAL,0,200
		DA:LOCAL:(LOCAL:1) = 0
	NEXT
NEXT
;初期サイズ設定
FOR COUNT,0,25
	CALL CHANGE_DM_現M(COUNT)
	SIF DM_SIZE_X(0) == 0
		CALL CHANGE_DM_SIZE_X(10)
	SIF DM_SIZE_Y(0) == 0
		CALL CHANGE_DM_SIZE_Y(10)
NEXT
CALL CHANGE_DM_現M(0)

;ライン強調フラグX
CALL CHANGE_DM_LINE_X(-1)
;ライン強調フラグY
CALL CHANGE_DM_LINE_Y(-1)
$MAKER_START
CALL SHOW_DM_MAP
PRINT 設置マス選択(
IF DM_MODE(0) == 1
	PRINTBUTTON "タイル設置",5031
	PRINT /
	SETCOLOR 0x990000
	PRINTBUTTON "イベント設置",5032
	RESETCOLOR
ELSEIF DM_MODE(0) == 0
	SETCOLOR 0x990000
	PRINTBUTTON "タイル設置",5031
	RESETCOLOR
	PRINT /
	PRINTBUTTON "イベント設置",5032
ENDIF
PRINTL )
IF DM_MODE(0) == 1
	FOR COUNT,1,21
		SIF COUNT == DM_TILE_TYPE(0)
			SETCOLOR 0x990000
		IF DM_EVENT_CONTENTS(COUNT,0) > 0
			PRINT   
		ELSE
			LOCALS = {COUNT,2}
			PRINTBUTTON LOCALS,5010+COUNT
		ENDIF
		PRINT 　
		SIF COUNT == 10
			PRINTL 
		RESETCOLOR
	NEXT
ELSEIF DM_MODE(0) == 0
	SIF DM_TILE_TYPE(0) == 0
		SETCOLOR 0x990000
	PRINTBUTTON "■",5010
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 1
		SETCOLOR 0x990000
	PRINTBUTTON "□",5011
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 2
		SETCOLOR 0x990000
	PRINTBUTTON "扉",5012
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 3
		SETCOLOR 0x990000
	PRINTBUTTON "宝",5013
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 4
		SETCOLOR 0x990000
	PRINTBUTTON "！",5014
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 5
		SETCOLOR 0x990000
	PRINTBUTTON "罠",5015
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 6
		SETCOLOR 0x990000
	PRINTBUTTON "昇",5016
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 7
		SETCOLOR 0x990000
	PRINTBUTTON "降",5017
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 8
		SETCOLOR 0x990000
	PRINTBUTTON "出",5018
	RESETCOLOR
	PRINT 　
	SIF DM_TILE_TYPE(0) == 9
		SETCOLOR 0x990000
	PRINTBUTTON "特",5019
ENDIF
RESETCOLOR
PRINTL 
PRINTL [9998] フラグ一覧
PRINTLC [9999] アウトプット
PRINTLC [10000] Return
PRINTLC [10001] インプット
PRINTL
$INPUT_LOOP
INPUT
LOCAL = RESULT / 100
LOCAL:1 = RESULT % 100
SIF RESULT == 10000
	RETURN
IF RESULT >= 0 && LOCAL <= DM_SIZE_X(0) && LOCAL:1 <= DM_SIZE_Y(0)
	IF DM_MODE(0) == 0
		IF DM_TILE(LOCAL,LOCAL:1) == DM_TILE_TYPE(0)
			CALL CHANGE_DM_TILE(LOCAL,LOCAL:1,1)
		ELSE
			CALL CHANGE_DM_TILE(LOCAL,LOCAL:1,DM_TILE_TYPE(0))
		ENDIF
	ELSE
		IF DM_EVENT(LOCAL,LOCAL:1) > 0
			;面倒なのでイベント番号を変数にとってしまう
			LOCAL:10 = DM_EVENT(LOCAL,LOCAL:1)
			;0はイベント種類を示す
			SELECTCASE DM_EVENT_CONTENTS(LOCAL:10,0)
				CASE 1
					PRINTL このイベントは宝箱です
					PRINTFORML 中身は%DM_EVENT_MESSAGE(LOCAL:10,0)%で
					PRINTFORML 使用フラグは DB:(FLAG:現在のダンジョン):{DM_EVENT_CONTENTS(LOCAL:10,20)}で
					PRINTFORML 入手個数（価格）は{DM_EVENT_CONTENTS(LOCAL:10,1)}です
				CASE 2
					PRINTL このイベントは登り階段です
					PRINTFORML 階層{DM_EVENT_CONTENTS(LOCAL:10,3)}の（{DM_EVENT_CONTENTS(LOCAL:10,1)}/{DM_EVENT_CONTENTS(LOCAL:10,2)}）につながっています。
				CASE 3
					PRINTL このイベントは降り階段です
					PRINTFORML 階層{DM_EVENT_CONTENTS(LOCAL:10,3)}の（{DM_EVENT_CONTENTS(LOCAL:10,1)}/{DM_EVENT_CONTENTS(LOCAL:10,2)}）につながっています。
				CASE 4
					PRINTL このイベントはワープゾーンです
					PRINTFORML 階層{DM_EVENT_CONTENTS(LOCAL:10,3)}の（{DM_EVENT_CONTENTS(LOCAL:10,1)}/{DM_EVENT_CONTENTS(LOCAL:10,2)}）につながっています。
				CASE 5
					PRINTL このイベントはその他のイベントです
					PRINTFORML 使用イベントは {LOCAL:10}で
					PRINTFORML 内容は「%DM_EVENT_MESSAGE(LOCAL:10,0)%」です
			ENDSELECT
			PRINTFORML このイベントを削除しますか？
			CALL INPUT_YN
			IF RESULT == 0
				CALL DM_DEL_EVENT(LOCAL,LOCAL:1,LOCAL:10)
			ELSEIF RESULT == 1
			ENDIF
		ELSE
			IF DM_TILE_TYPE(0) >= 0
				PRINTFORML イベントの種類を選んでください
				PRINTL [1]宝
				PRINTL [2]昇り階段
				PRINTL [3]降り階段
				PRINTL [4]ワープポイント
				PRINTL [5]その他イベント
				CALL INPUTINT(1,2,3,4,5)
				LOCAL:11 = RESULT
				$INPUT_LOOP_EV1
				SELECTCASE LOCAL:11
					CASE 1
						PRINTFORML 宝箱の中身を選んでください
						PRINTBUTTON "[ 0]円　　　",0
						PRINTBUTTON "　[ 1]魔貨　　",1
						PRINTBUTTON "　[ 2]その他　",2
						PRINTL 
						PRINTBUTTON "[10]使用道具",10
						PRINTBUTTON "　[20]Sword　　　",20
						PRINTBUTTON "　[25]Gun　　　",25
						PRINTL 
						PRINTBUTTON "[30]頭防具　",30
						PRINTBUTTON "　[35]胴防具　",35
						PRINTBUTTON "　[40]腕防具　",40
						PRINTL 
						PRINTBUTTON "[45]足防具　",45
						PRINTBUTTON "　[50]アクセ　",50
						PRINTBUTTON "　[55]特殊弾丸",55
						PRINTL 
						CALL INPUTINT(0,1,2,10,11,20,25,30,35,40,45,50,55)
						IF RESULT == 0
							CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0,"円")
						ELSEIF RESULT == 1
							CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0,"魔貨")
						ELSEIF RESULT == 2
							PRINTFORML では、直接番号か、アイテム名を入力してください
							INPUTS
							CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0,RESULTS)
						ELSE
							LOCAL:12 = 0
							FOR COUNT,RESULT*100,RESULT*100+501
								IF COUNT == RESULT*100+500
									PRINTFORMLC [100] Return
									LOCAL:12 += 1
									PRINTL 
								ELSEIF STRLENS(ITEMNAME:COUNT) > 0
									PRINTFORMLC [{COUNT}] %ITEMNAME:COUNT,18%
									LOCAL:12 += 1
									SIF LOCAL:12 % 4 == 0
										PRINTL 
								ENDIF
							NEXT
							$INPUT_LOOP_ITEM
							INPUT
							IF STRLENS(ITEMNAME:RESULT) > 0
								CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0,ITEMNAME:RESULT)
							ELSEIF RESULT == 100
								GOTO MAKER_START
							ELSE
								GOTO INPUT_LOOP_ITEM
							ENDIF
						ENDIF
						PRINTL 使用フラグを選んでください
						CALL SHOW_DM_FLAGLIST
						LOCAL:10 = RESULT
						CALL CHANGE_DM_EVENT_CONTENTS(DM_TILE_TYPE(0),20,LOCAL:10)
						CALL CHANGE_DM_FLAG(LOCAL:10,0,1)
						IF DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0) == "円" || DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0) == "魔貨"
							PRINTL 入手金額を選んでください
							CALL INPUT_MANY(0,1000000)
						ELSE
							PRINTL 入手個数を入力してください
							CALL INPUT_MANY(0,1000)
						ENDIF
						CALL CHANGE_DM_EVENT_CONTENTS(DM_TILE_TYPE(0),1,RESULT)
						PRINTFORML 中身 %DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0)%
						PRINTFORML 使用フラグ DB:(FLAG:現在のダンジョン):{DM_EVENT_CONTENTS(DM_TILE_TYPE(0),20)}
						PRINTFORML 入手個数・金額 {DM_EVENT_CONTENTS(DM_TILE_TYPE(0),1)}
						PRINTL 以上でよろしいですか？
						CALL INPUT_YN
						IF RESULT == 1
							PRINTL では、入力をやりなおしてください
							GOTO INPUT_LOOP_EV1
						ELSE
							LOCALS = 宝箱:[%DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0)%] 数量:[{DM_EVENT_CONTENTS(DM_TILE_TYPE(0),1)}]
							CALL CHANGE_DM_FLAG_MESSAGE(LOCAL:10,LOCALS)
						ENDIF
						CALL CHANGE_DM_FLAG(LOCAL:10,1,LOCAL)
						CALL CHANGE_DM_FLAG(LOCAL:10,2,LOCAL:1)
						CALL CHANGE_DM_FLAG(LOCAL:10,3,DM_現M(0))
						CALL CHANGE_DM_FLAG(LOCAL:10,4,DM_TILE_TYPE(0))
					CASE 2 TO 4
						$EV_WORP1
						PRINTFORML 移動先の階層を選んでください
						CALL INPUT_MANY(0,24)
						LOCAL:3 == DM_現M(0)
						LOCAL:4 = RESULT
						CALL CHANGE_DM_現M(RESULT)
						PRINTFORMW 移動先の座標を指定してください
						$EV_WORP2
						CALL SHOW_DM_MAP
						$INPUT_LOOP_EV_WORP
						INPUT
						LOCAL:12 = RESULT / 100
						LOCAL:13 = RESULT % 100
						IF RESULT >= 0 && LOCAL <= DM_SIZE_X(0) && LOCAL:1 <= DM_SIZE_Y(0)
							PRINTFORML 階層{DM_現M(0)}の（{LOCAL:12}/{LOCAL:13}）ですがよろしいですか？
							CALL INPUT_YN
							IF RESULT == 1
								PRINTFORML では、指定しなおしてください
								CALL CHANGE_DM_現M(LOCAL:3)
								GOTO EV_WORP1
							ENDIF
						ELSEIF RESULT >= 5010 && RESULT <= 5019 && DM_MODE(0) == 0
							CALL CHANGE_DM_TILE_TYPE(RESULT-5010)
							GOTO EV_WORP2
						ELSEIF RESULT >= 5011 && RESULT <= 5029 && DM_MODE(0) == 1
							CALL CHANGE_DM_TILE_TYPE(RESULT- 5010)
							GOTO EV_WORP2
						ELSE
							GOTO INPUT_LOOP_EV_WORP
						ENDIF
						CALL CHANGE_DM_現M(LOCAL:3)
						CALL CHANGE_DM_EVENT_CONTENTS(DM_TILE_TYPE(0),1,LOCAL:12)
						CALL CHANGE_DM_EVENT_CONTENTS(DM_TILE_TYPE(0),2,LOCAL:13)
						CALL CHANGE_DM_EVENT_CONTENTS(DM_TILE_TYPE(0),3,LOCAL:4)
						IF LOCAL:11 == 2
							CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0,"昇り階段")
						ELSEIF LOCAL:11 == 3
							CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0,"降り階段")
						ELSE
							CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(0),0,"ワープゾーン")
						ENDIF
					CASE 5
						PRINTL その他のイベントです
						PRINTL どのような動作をするかだけ入力しておくといいでしょう
						$INPUT_LOOP_EV2
						LOCAL:12 = -1
						PRINTL フラグを使用しますか？
						CALL INPUT_YN
						IF RESULT == 0
							PRINTL 使用フラグを選んでください
							CALL SHOW_DM_FLAGLIST
							LOCAL:12 = RESULT
						ENDIF
						PRINTFORML イベント内容を入力してください
						INPUTS
						CALL CHANGE_DM_EVENT_MESSAGE(DM_TILE_TYPE(), 0, RESULTS)
						SIF LOCAL:12 >= 0
							CALL CHANGE_DM_FLAG_MESSAGE(LOCAL:12, RESULTS)
						PRINTFORML このイベントは「%DM_EVENT_MESSAGE(DM_TILE_TYPE())%」です
						PRINTL よろしいですか？
						CALL INPUT_YN
						IF RESULT == 1
							PRINTW では、入力しなおしてください
							GOTO INPUT_LOOP_EV2
						ENDIF
						IF LOCAL:12 >= 0
							CALL CHANGE_DM_EVENT_CONTENTS(DM_TILE_TYPE(),20, LOCAL:12)
							CALL CHANGE_DM_FLAG(LOCAL:12,0,1)
							CALL CHANGE_DM_FLAG(LOCAL:12,1,LOCAL)
							CALL CHANGE_DM_FLAG(LOCAL:12,2,LOCAL:1)
							CALL CHANGE_DM_FLAG(LOCAL:12,3,DM_現M(0))
							CALL CHANGE_DM_FLAG(LOCAL:12,4,DM_TILE_TYPE(0))
						ENDIF
				ENDSELECT
				$INPUT_END_EV
				CALL CHANGE_DM_EVENT(LOCAL, LOCAL:1, DM_TILE_TYPE(0))
				CALL CHANGE_DM_EVENT_CONTENTS(DM_TILE_TYPE(0),0,LOCAL:11)
				CALL CHANGE_DM_TILE_TYPE(-1)
			ENDIF
		ENDIF
	ENDIF
ELSEIF RESULT == 5001
	CALL CHANGE_DM_SIZE_X(DM_SIZE_X(ARG) + 1)
ELSEIF RESULT == 5002
	CALL CHANGE_DM_SIZE_X(DM_SIZE_X(ARG) - 1)
ELSEIF RESULT == 5003
	CALL CHANGE_DM_SIZE_Y(DM_SIZE_Y(ARG) + 1)
ELSEIF RESULT == 5004
	CALL CHANGE_DM_SIZE_Y(DM_SIZE_Y(ARG) - 1)
ELSEIF RESULT == 5005
	CALL CHANGE_DM_現M(DM_現M(0) + 1)
ELSEIF RESULT == 5006
	CALL CHANGE_DM_現M(DM_現M(0) - 1)
ELSEIF RESULT >= 5010 && RESULT <= 5019 && DM_MODE(0) == 0
	CALL CHANGE_DM_TILE_TYPE(RESULT-5010)
ELSEIF RESULT >= 5011 && RESULT <= 5029 && DM_MODE(0) == 1
	CALL CHANGE_DM_TILE_TYPE(RESULT- 5010)
ELSEIF RESULT == 5031
	CALL CHANGE_DM_MODE(0)
	CALL CHANGE_DM_TILE_TYPE(0)
ELSEIF RESULT == 5032
	CALL CHANGE_DM_TILE_TYPE(-1)
	CALL CHANGE_DM_MODE(1)
ELSEIF RESULT >= 6000 && RESULT-6000 <= DM_SIZE_X(0)
	IF RESULT -6000 == DM_LINE_X(0)
		CALL CHANGE_DM_LINE_X(-1)
	ELSE
		CALL CHANGE_DM_LINE_X(RESULT - 6000)
	ENDIF
ELSEIF RESULT >= 6100 && RESULT-6100<= DM_SIZE_Y(0)
	IF RESULT - 6100 == DM_LINE_Y(0)
		CALL CHANGE_DM_LINE_Y(-1)
	ELSE
		CALL CHANGE_DM_LINE_Y(RESULT - 6100)
	ENDIF
ELSEIF RESULT == 9998
	CALL SHOW_DM_FLAGLIST2
ELSEIF RESULT == 9999
	PRINTL 出力する階層を選んでください
	CALL INPUT_MANY(0,24)
	CALL OUTPUT_DUNGEON(RESULT)
ELSEIF RESULT == 10001
	PRINTL 入力先の階層番号を選んでください
	PRINTL -1を入力することでダンジョン呼び出しモードになります
	CALL INPUT_MANY(-1, 24)
	COUNT:1 = 1
	IF RESULT == -1
		FOR COUNT, 0, 99
			TRYCCALLFORM GET_DUNGEON_NAME_{COUNT}
				PRINTFORML [{COUNT}] %RESULTS%
				COUNT:COUNT = 1
			CATCH
			ENDCATCH
		NEXT
		INPUT
		SIF COUNT:RESULT == 0
			GOTO MAKER_START
		LOCAL:4 = RESULT
		FOR COUNT, 0, 25
			FLAG:現M = COUNT
			CALL CHANGE_DM_現M(COUNT)
			CALLFORM MAKE_FLOOR_{LOCAL:4}
			FOR LOCAL:1,0,20
				FOR LOCAL,0,20
					CALL CHANGE_DM_TILE(LOCAL,LOCAL:1,DA:LOCAL:(LOCAL:1))
				NEXT
			NEXT
			CALL CHANGE_DM_SIZE_X(FLAG:最大X)
			CALL CHANGE_DM_SIZE_Y(FLAG:最大Y)
			FOR LOCAL:1,0,20
				FOR LOCAL,0,20
					DA:LOCAL:(LOCAL:1) = 0
				NEXT
			NEXT
			FLAG:最大X = 10
			FLAG:最大Y = 10
			
		NEXT
		CALL CHANGE_DM_現M(0)
	ELSE
		LOCAL:4 = RESULT
		$INPUT_LOOP2
		PRINTL 呼び出す番号を入力してください
		PRINTL -1を入力することで戻ります
		CALL INPUT_MANY(-1,10000)
		IF RESULT == -1
			REUSELASTLINE 
			GOTO MAKER_START
		ELSE
			LOCAL:5 = RESULT
			LOCAL:3 = DM_現M(0)
			CALL CHANGE_DM_現M(LOCAL:4)
			TRYCCALLFORM INPUT_DUNGEON_{LOCAL:5}
				FOR LOCAL:1,0,20
					FOR LOCAL,0,20
						CALL CHANGE_DM_TILE(LOCAL,LOCAL:1,DA:LOCAL:(LOCAL:1))
					NEXT
				NEXT
				WAIT
				CALL CHANGE_DM_SIZE_X(FLAG:最大X)
				CALL CHANGE_DM_SIZE_Y(FLAG:最大Y)
				CALL CHANGE_DM_現M(LOCAL:3)
			CATCH
				PRINTFORMW 指定されたマップは存在しません
				REUSELASTLINE 
				GOTO INPUT_LOOP2
			ENDCATCH
		ENDIF
	ENDIF
ELSE
ENDIF
REUSELASTLINE 
GOTO MAKER_START

@OUTPUT_DUNGEON(ARG)
LOCAL:3 = DM_現M(0)
CALL CHANGE_DM_現M(ARG)
PRINTFORML 現在の階層(現M){DM_現M(0)} 
PRINTSL ";この行からコピペ開始"
PRINTFORML FLAG:最大X = {DM_SIZE_X(ARG)} 
PRINTFORML FLAG:最大Y = {DM_SIZE_Y(ARG)} 
FOR LOCAL:1,0,DM_SIZE_Y(ARG)
	PRINT CALL MAKE_FLOOR_LINE,
	PRINTFORM {LOCAL:1,2}
	PRINT ,"
	FOR LOCAL,0,DM_SIZE_X(ARG)
		LOCAL:8 = LOCAL + LOCAL:7 * 20
		IF DM_TILE(LOCAL,LOCAL:1)
			PRINTFORM {DM_TILE(LOCAL,LOCAL:1)}
		ELSE
			PRINT  
		ENDIF
	NEXT
	PRINTL "
NEXT
PRINTSL ";この行でコピペ終了"
PRINTL
FOR LOCAL:1,0,DM_SIZE_Y(ARG)
	FOR LOCAL,0,DM_SIZE_X(ARG)
		IF DM_EVENT(LOCAL,LOCAL:1) > 1 && DM_EVENT(LOCAL,LOCAL:1) < 10
			SELECTCASE DA:(LOCAL:8):(LOCAL:9)
				CASE 2
					LOCALS = 扉
				CASE 3
					LOCALS = 宝
				CASE 4
					LOCALS = ！
				CASE 5
					LOCALS = 罠
				CASE 6
					LOCALS = 昇
				CASE 7
					LOCALS = 降
				CASE 8
					LOCALS = 出
				CASE 9
					LOCALS = 特
			ENDSELECT
			PRINTFORML 座標({LOCAL}/{LOCAL:1})に「%LOCALS%」があります
			LOCAL:22 = 1
			IF LOCALS == "特"
				PRINTFORML 関数@TILE_MARK_FLAG:現在のダンジョン番号_{DM_現M(0)}_{LOCAL}_{LOCAL:1}　
				PRINTL を定義するのを忘れないようにしましょう
			ENDIF
		ENDIF
		IF DM_EVENT(LOCAL,LOCAL:1) > 0
			;イベント番号
			LOCAL:4 = DM_EVENT(LOCAL, LOCAL:1)
			;イベント内容
			LOCAL:5 = DM_EVENT_CONTENTS(LOCAL:4,0)
			SELECTCASE LOCAL:5
				;宝箱
				CASE 1
					;イベントフラグ
					LOCAL:6 = DM_EVENT_CONTENTS(LOCAL:4,20)
					PRINTFORML 座標({LOCAL}/{LOCAL:1})に宝箱が設置されています
					PRINTFORM 使用フラグは{LOCAL:6},
					IF DM_EVENT_MESSAGE(DM_EVENT(LOCAL,LOCAL:1),0) == "魔貨" || DM_EVENT_MESSAGE(DM_EVENT(LOCAL,LOCAL:1),0) == "円"
						PRINTFORML 中身は{DM_EVENT_CONTENTS(LOCAL:4,1)}%DM_EVENT_MESSAGE(LOCAL:4,0)%で、
						IF DM_EVENT_MESSAGE(DM_EVENT(LOCAL,LOCAL:1),0) == "円"
							PRINTFORML 命令はCALL GET_TREASURE_MONEY,0,{DM_EVENT_CONTENTS(LOCAL:4,1)},(FLAG:現在のダンジョン), {LOCAL:6}
						ELSE
							PRINTFORML 命令はCALL GET_TREASURE_MONEY,1,{DM_EVENT_CONTENTS(LOCAL:4,1)},(FLAG:現在のダンジョン), {LOCAL:6}
						ENDIF
					ELSE
						PRINTFORML 中身は%DM_EVENT_MESSAGE(LOCAL:4,0)%で、{DM_EVENT_CONTENTS(LOCAL:4,1)}個
						PRINTFORML 命令はCALL GET_TREASURE, [[アイテム:%DM_EVENT_MESSAGE(LOCAL:4,0)%]], {DM_EVENT_CONTENTS(LOCAL:4,1)},(FLAG:現在のダンジョン),{LOCAL:6}
					ENDIF
				;登り階段
				CASE 2
					PRINTFORML 座標({LOCAL}/{LOCAL:1})に昇り階段が設置されています
					PRINTFORML この階段は階層{DM_EVENT_CONTENTS(LOCAL:4,3)}の（{DM_EVENT_CONTENTS(LOCAL:4,1)}/{DM_EVENT_CONTENTS(LOCAL:4,2)}）につながっています
					PRINTFORML 命令はCALL DUNGEON_UPSTAIRS,{DM_EVENT_CONTENTS(LOCAL:4,3)},{DM_EVENT_CONTENTS(LOCAL:4,1)},{DM_EVENT_CONTENTS(LOCAL:4,2)} です
				;降り階段
				CASE 3
					PRINTFORML 座標({LOCAL}/{LOCAL:1})に降り階段が設置されています
					PRINTFORML この階段は階層{DM_EVENT_CONTENTS(LOCAL:4,3)}の（{DM_EVENT_CONTENTS(LOCAL:4,1)}/{DM_EVENT_CONTENTS(LOCAL:4,2)}）につながっています
					PRINTFORML 命令はCALL DUNGEON_DOWNSTAIRS,{DM_EVENT_CONTENTS(LOCAL:4,3)},{DM_EVENT_CONTENTS(LOCAL:4,1)},{DM_EVENT_CONTENTS(LOCAL:4,2)} です
				;ワープゾーン
				CASE 4
					PRINTFORML 座標({LOCAL}/{LOCAL:1})にワープゾーンが設置されています
					PRINTFORML この階段は階層{DM_EVENT_CONTENTS(LOCAL:4,3)}の（{DM_EVENT_CONTENTS(LOCAL:4,1)}/{DM_EVENT_CONTENTS(LOCAL:4,2)}）につながっています
					PRINTFORML 命令はCALL DUNGEON_WORP,{DM_EVENT_CONTENTS(LOCAL:4,3)},{DM_EVENT_CONTENTS(LOCAL:4,1)},{DM_EVENT_CONTENTS(LOCAL:4,2)} です
				;その他のイベント
				CASE 5
					PRINTFORML 座標({LOCAL}/{LOCAL:1})にイベントが設置されています
					PRINTFORML 内容は「%DM_EVENT_MESSAGE(LOCAL:4,0)%」です
					LOCAL:6 = DM_EVENT_CONTENTS(LOCAL:4 ,20)
					IF LOCAL:6
						PRINTFORML 使用フラグは{LOCAL:6}です
					ENDIF
			ENDSELECT
		ELSEIF LOCAL:22
			SIF LOCALS != "扉"
				PRINTFORML ※イベントマスが設置されていますが、イベントが設置されていません
		ENDIF
		LOCAL:22 = 0
	NEXT
NEXT
WAIT
CALL CHANGE_DM_現M(LOCAL:3)
RETURN 0
@MAKE_FLOOR_LINE_MAKER,ARG,ARG:1,ARGS
	CALL MAKE_FLOOR_LINE(ARG,ARGS)
