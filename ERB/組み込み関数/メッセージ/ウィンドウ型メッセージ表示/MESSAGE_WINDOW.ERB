;------------------------------------------------------------------------------------------------------------
;引数解説
;ARGS 				喋る人
;ARGS:1 			メッセージ内容
;区切り文字			メッセージを区切る文字列
;字幅 				1行の幅(設定値を越えてる行がある場合はその行にあわせる)
;行数 				行数(省略した場合は自動で数をあわせる)
;オプション			文字列で指定します。無記述のものは〜しないという形になるので注意してください
;					ログを残さない/ログを残す
;							表示後。メッセージを消すかどうかです。
;							同一ウィンドウ内で文字が出力されてるように見せかけたい場合は残してください。あるいは再利用する場合は着前のはログを消します
;					ボタンを利用する/ボタンを利用しない
;							LOG/AUTO/CONFIGの3ボタンを表示し、実行できるようにするかどうか選びます
;							それぞれのボタンは過去ログ閲覧・メッセージ表示後の自動送り・コンフィグ設定に対応しています
;					再利用する/再利用しない
;							前のメッセージ欄からそのまま続いてるかのように表記します
;							フェードインとタイプを組み合わせるときなどにどうぞ
;					NOWAIT
;						最後にWAITをかけずにPRINTLのまま流します
;					NOANIME
;						アニメをせずに一気に表示します
;位置				LEFT / CENTER / RIGHT
;							枠の表示位置を調整します。
;表示タイプ 		TYPE:タイプ風アニメ　FADE:フェードイン
;フェード間隔 		フェードインの場合の、1行当たりの表示時間(*1/10sec)
;終色 				フェードインの場合の最終的な文字色
;文字列体裁			LEFT / CENTER / RIGHT
;							中の文字列の枠内の表示位置を変更します
;
;コンフィグ			以下のフラグはFLAG.ｃsvで定義してください
;					FLAG:オート送り
;							オート送りのONOFFを保存します
;					GLOBAL:メッセージ速度
;							メッセージ速度を保存します。表示は0.1秒ごとですがその際の表示されていく文字数はこの値と等しくなります
;					GLOBAL:オート時ウェイト
;							オート送り時、全メッセージ表示後の待機時間を保存します
;					GLOBAL:右クリック時ウェイト
;							右クリック時、全メッセージ表示後の待機時間を保存します
;					GLOBAL:メッセージアニメ利用
;							自動的にオプションに"/NOANIME"を追加します
;------------------------------------------------------------------------------------------------------------
@MESSAGE_WINDOW, ARGS, ARGS:1, 区切り文字 = "/" , オプション = "ログを残さない/ボタンを利用する/再利用しない" , 位置 , 字幅 = 72, 行数 = -1 , 表示タイプ = "TYPE" , フェード間隔 = 10 , 終色 = -1 , 文字列体裁 = "LEFT"
#LOCALSIZE 10
#LOCALSSIZE 50
#DIMS 保存文字列 , 50
#DIM 色 , 3

#DIMS オプション
#DIMS 区切り文字
#DIMS 位置
#DIM 字幅
#DIM 行数
#DIMS 表示タイプ
#DIM 終色
#DIMS 文字列体裁

#DIMS 表示文字列
#DIMS 前回ARGS
#DIMS 前回発言者
#DIM 前回字幅
#DIM 前回行数
#DIMS 前回位置
#DIM LINE
#DIM 速度
#DIM ログ取得済み
#DIM フェード間隔

;ARG:5 
LINE = LINECOUNT
ログ取得済み = 0
IF 表示タイプ == "FADE"
	速度 = 1
ELSE
	速度 = MAX(1, GLOBAL:メッセージ速度)
ENDIF
SIF 表示タイプ == "FADE"
	色:0 = GETCOLOR()
SIF 表示タイプ == "FADE" && 終色 == -1
	色:1 = 色:0

;名前部分の字数を偶数にする
SIF STRLENS(ARGS) % 2
	ARGS += " "
;空文字列でない場合装飾を追加
SIF ARGS != ""
	ARGS = ┤%ARGS%├

;GLOBAL:メッセージアニメ利用が立ってない場合、自動的にオプションに"/NOANIME"を追加する
SIF GLOBAL:メッセージアニメ利用 == 0
	オプション += "/NOANIME"

;オプションに再利用するが入っている場合、前回のメッセージボックスの中身をそのまま使う
IF STRCOUNT(オプション, "再利用する")
	SIF ARGS == ""
		ARGS = %前回発言者%
	SIF !行数
		行数 = 前回行数
	SIF 位置 == ""
		位置 = %前回位置%
	ARGS:1 = %前回ARGS%\@ARGS:1 != "" ? %区切り文字%%ARGS:1% # \@
	字幅 = MAX(字幅 , 前回字幅)
	IF 表示タイプ == "TYPE"
		LOCAL = LOCAL:3 - 速度
	ELSEIF 表示タイプ == "FADE"
		LOCAL = LOCAL:4 * フェード間隔 -1
	ENDIF
	;前回のログを消す
	CALL MESSAGE_WINDOW_LOG(, , , , , -1)
ELSE
	SIF 位置 == ""
		位置 = LEFT
	VARSET LOCALS , ""
	LOCAL = - 1
	;LOCAL:4 表示済みの行数
	LOCAL:4 = 0
	;LOCAL:5 前行までの文字列の長さ合計
	LOCAL:5 = 0
ENDIF
VARSET 保存文字列
SPLIT ARGS:1 , 区切り文字 , 保存文字列

;文字幅計算
FOR LOCAL:1 , 0 , 50
	字幅 = MAX(字幅 , (STRLENS(保存文字列:(LOCAL:1))+1) / 2 * 2)
NEXT


;行数計算
;ARGS:1内の区切り文字が有る個数+1が行になるはず
LOCAL:2 = STRCOUNT(ARGS:1, 区切り文字)
;引数として渡されている場合は変更なし
SIF 行数 == -1
	行数 = LOCAL:2 + 1

;文字数計算
LOCAL:3 = STRLENSU(ARGS:1) - STRLENSU(区切り文字) * LOCAL:2
$START
REDRAW 0
CALL SET_ALIGNMENT, 位置
;RESULTSにAがはいらない場合、アニメ停止となる
RESULTS = \@STRCOUNT(オプション, "NOANIME") ? NOANIME # A\@
WHILE LOCAL:3 + 速度 > LOCAL
	LOCAL += 速度
	IF 表示タイプ == "TYPE"
		WHILE LOCAL - LOCAL:5 >= STRLENSU(保存文字列:(LOCAL:4)) && LOCAL:4 < LOCAL:2+1
			LOCALS:(LOCAL:4) = %保存文字列:(LOCAL:4)%
			LOCAL:5 += STRLENSU(保存文字列:(LOCAL:4))
			LOCAL:4 ++
		WEND
	ELSEIF 表示タイプ == "FADE"
		WHILE LOCAL >= (LOCAL:4+1) * フェード間隔
			LOCAL:5 += STRLENSU(保存文字列:(LOCAL:4))
			LOCAL:4 ++
		WEND
	ENDIF
	CLEARLINE LINECOUNT - LINE
	;右クリックorクリックorEnterを押していると残りも全部表示する
	IF MESSKIP() || FLAG:ウィンドウメッセージスキップ || RESULTS != "A" || (GLOBAL:メッセージ速度 == 0 && 表示タイプ == "TYPE" )
		LOCAL = (表示タイプ != "FADE" ? LOCAL:3 # (LOCAL:2+1) * フェード間隔 )
		LOCAL:5 = LOCAL:3
		LOCAL:4 = LOCAL:2+1
		FOR LOCAL:1 , 0 , 行数
			LOCALS:(LOCAL:1) = %保存文字列:(LOCAL:1)%
		NEXT
	ENDIF
	;名前と上側を表示
	PRINTFORM %"┌" + ARGS + "─" * ((字幅 - STRLENS(ARGS)+1) / 2) + "┐"%
	PRINTL
	
	;最新の行の中身を入力
	IF 表示タイプ == "TYPE"
		LOCALS:(LOCAL:4) = %SUBSTRINGU(保存文字列:(LOCAL:4) , 0 , LOCAL - LOCAL:5)%
	ELSE
		LOCALS:(LOCAL:4) = %保存文字列:(LOCAL:4)%
	ENDIF
	
	;体裁整え+表示
	FOR LOCAL:1, 0, 行数
		PRINT │
		IF 表示タイプ == "FADE" && LOCAL:1 == LOCAL:4
			色:2 = LOCAL - LOCAL:4 * MAX(フェード間隔 , 1)
			SETCOLOR 色:1 / POWER(256 , 2) * 色:2 / MAX(フェード間隔 , 1) , 色:1 / 256 % 256 * 色:2 / MAX(フェード間隔 , 1) , 色:1 % 256 * 色:2 / MAX(フェード間隔 , 1)
		ELSEIF 表示タイプ == "FADE"
			SETCOLOR 色:1
		ENDIF

		SELECTCASE 文字列体裁
			CASE "RIGHT"
				PRINTBUTTON @"%LOCALS:(LOCAL:1),字幅,RIGHT%", "0"
			CASE "CENTER"
				IF LOCAL:1 <= LOCAL:4
					;LOCAL:7 LOCALS:(LOCAL:1)の左側のスペースを計算しておくもの
					LOCAL:7 = (字幅 - STRLENS(保存文字列:(LOCAL:1)))/2
					PRINTBUTTON " " * LOCAL:7 + LOCALS:(LOCAL:1) + " " * (字幅 - STRLENS(LOCALS:(LOCAL:1)) - LOCAL:7), "0"
				ELSE
					PRINTBUTTON " " * 字幅 , "0"
				ENDIF
			CASEELSE
				PRINTBUTTON @"%LOCALS:(LOCAL:1),字幅,LEFT%" , "0"
		ENDSELECT
		SIF 表示タイプ == "FADE"
			SETCOLOR 色:0
		PRINTL │
	NEXT
	;下表示
	PRINTFORM └%"─"*(字幅/2-23)%
	IF !STRCOUNT(オプション, "ボタンを利用しない")
		;最後以外はログ・CONFIGボタンを作らない
		IF LOCAL:3 > LOCAL + 速度
			PRINTPLAINFORM [+] LOG
			PRINTBUTTON @" [-] AUTO<\@FLAG:オート送り ?%" ON"%#OFF\@>", "-"
			PRINTBUTTON @" [*] SKIP<\@FLAG:ウィンドウメッセージスキップ ?%" ON"%#OFF\@>", "*"
			PRINTPLAINFORM  [/] CONFIG
		ELSE
			PRINTBUTTON "[+] LOG", "+"
			PRINTBUTTON @" [-] AUTO<\@FLAG:オート送り ?%" ON"%#OFF\@>", "-"
			PRINTBUTTON @" [*] SKIP<\@FLAG:ウィンドウメッセージスキップ ?%" ON"%#OFF\@>", "*"
			PRINTBUTTON " [/] CONFIG", "/"
		ENDIF
	ELSE
		PRINTFORM %"─"*23%
	ENDIF
	PRINTL ┘
	;右クリックorクリックorEnterを押しているとここで抜ける
	SIF MESSKIP() || FLAG:ウィンドウメッセージスキップ || RESULTS != "A" || (GLOBAL:メッセージ速度 == 0 && 表示タイプ == "TYPE" )
		BREAK
	;入力関係
	IF LOCAL:3 > LOCAL + 速度
		TONEINPUTS 100, "A" , 0, ""
		SIF RESULTS != ""
			CLEARLINE 1
	ENDIF
	IF RESULTS == "-" && STRCOUNT(オプション, "ボタンを利用する")
		INVERTBIT FLAG:オート送り, 0
		RESULTS = A
	ELSEIF  RESULTS == "*" && STRCOUNT(オプション, "ボタンを利用する")
		INVERTBIT FLAG:ウィンドウメッセージスキップ, 0
		RESULTS = A
	ENDIF
WEND
CALL SET_ALIGNMENT, "PREV"
SIF ログ取得済み++ == 0
	CALL MESSAGE_WINDOW_LOG(ARGS, ARGS:1, 区切り文字, 行数, 字幅)
前回ARGS = %ARGS:1%
前回発言者 = %ARGS%
前回字幅 = 字幅
前回行数 = 行数
前回位置 = %位置%
;NOWAITモード時は止まらない
IF !STRCOUNT(オプション, "NOWAIT") && !FLAG:ウィンドウメッセージスキップ
	;マウススキップ時の挙動
	IF MESSKIP()
		;右クリック時ウェイトが0なら止まらない
		IF GLOBAL:右クリック時ウェイト && !STRCOUNT(オプション, "NOANIME")
			REDRAW 2
			TWAIT GLOBAL:右クリック時ウェイト, 1
		ENDIF
	ELSE
		IF STRCOUNT(オプション, "ボタンを利用する")
			;オート時ウェイトの挙動
			IF FLAG:オート送り
				;オート時ウェイトが0の場合は止まらない
				SIF GLOBAL:オート時ウェイト
					TONEINPUTS GLOBAL:オート時ウェイト, "A" , 0, ""
			ELSE
				ONEINPUTS
			ENDIF
			SIF RESULTS != ""
				CLEARLINE 1
			;ボタン選択
			IF (GROUPMATCH(RESULTS, "+", "-", "/" , "*"))
				;ログ閲覧
				IF RESULTS == "+"
					CALL MESSAGE_WINDOW_LOG(, , , , , 1)
				;オート送りモード切替
				ELSEIF RESULTS == "-"
					INVERTBIT FLAG:オート送り, 0
				;スキップモード切替
				ELSEIF RESULTS == "*"
					INVERTBIT FLAG:ウィンドウメッセージスキップ, 0
				ELSEIF RESULTS == "/"
					CALL MESSAGE_WINDOW_CONFIG
				ENDIF
				;最終表示になるようにして差し返す
				LOCAL = LOCAL:3 + 速度 - 1 
				CLEARLINE LINECOUNT - LINE
				GOTO START
			ENDIF
		ELSE
			;オート時ウェイトの挙動
			IF FLAG:オート送り && !STRCOUNT(オプション, "NOANIME")
				;オート時ウェイトが0の場合は止まらない
				SIF GLOBAL:オート時ウェイト
					TWAIT GLOBAL:オート時ウェイト, 0
			ELSE
				WAITANYKEY
			ENDIF
		ENDIF
	ENDIF
	;ログを残すが入ってない場合は消す
	SIF !STRCOUNT(オプション, "ログを残す")
		CLEARLINE LINECOUNT - LINE
ENDIF
REDRAW 1
RETURN 1
