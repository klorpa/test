;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:GUNBASE.ERB
;	Facility	:飛具の基本的な処理
;
;	Licence		:。
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		20XX/XX/XX		----					新規作成
;	002		2011/11/11		旅人					統合整備（ダメージ計算処理統合）
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#


;基本的な銃命中判定の処理
@JUDG_HIT_GUN,ARG,ARG:1,ARG:2
;ARG 攻撃者
;ARG:1 被攻撃者
;ARG:2 スキル命中率
;LOCAL 能力差による基本命中率
LOCAL = 100 - (MAXBASE:(ARG:1):(GET_BATTLESTATUS(3)) / 2) + (MAXBASE:ARG:銃命中 / 2)
LOCAL *= (32 + CFLAG:ARG:命中強化)
LOCAL /= 32
LOCAL *= (32 - CFLAG:(ARG:1):回避強化)
LOCAL /= 32
IF RAND:100 < ARG:2 * LOCAL / 100
	RETURN 1
ELSE
	RETURN 0
ENDIF

;基本的な銃攻撃のダメージ処理
@DAMAGE_GUN, ARG, ARG:1, ARG:2, ARG:3, ARG:4 = 5
;ARG 攻撃者
;ARG:1 被攻撃者
;ARG:2 威力
;ARG:3 相性
;LOCAL ダメージ
LOCAL:1 = 0
;---- EDIT 002 DEL START ---------------------------
;;リンケージの場合、能力参照者を指定できる
;IF CFLAG:ARG:リンケージ発動 && !CFLAG:ARG:単独リンケージ
;	;PRINTFORMW %CALLNAME:ARG%の攻撃力は{MAXBASE:ARG:魔法威力}
;	TRYCCALLFORM リンケージ能力参照者_{CFLAG:ARG:使用リンケージ}, ARG
;		TRYCALLFORM リンケージ能力参照者_{CFLAG:ARG:使用リンケージ}, ARG
;		LOCALS = リンケージ参加者{RESULT}
;		SIF RESULT
;			ARG = CFLAG:ARG:LOCALS
;	CATCH
;	ENDCATCH
;ENDIF
;---- EDIT 002 DEL END   ---------------------------
;---- EDIT 002 ADD START ---------------------------
;- BTL:リンケージチェック
CALL BTL_CHK_リンケージ(ARG)
ARG = RESULT
;---- EDIT 002 ADD END   ---------------------------
;---- EDIT 002 DEL START ---------------------------
;IF !CFLAG:(ARG:1):(GET_TYPE(ARG:3) + "ガードキル") && ((MAXBASE:(ARG:1):(GET_TYPE(ARG:3)) == 0 && ((HAVE_SKILL(ARG,2420) || HAVE_SKILL(ARG,2421))) == 0) || MAXBASE:(ARG:1):(GET_TYPE(ARG:3)) == 999 || (CFLAG:(ARG:1):物理反射フラグ && ARG:3 < 4) || (CFLAG:(ARG:1):魔法反射フラグ && (ARG:3 > 3 && ARG:3 != 17)))
;	PRINT BLOCK
;	RETURN 0
;ENDIF
;---- EDIT 002 DEL END   ---------------------------
;---- EDIT 002 ADD START ---------------------------
;- BTL計算:ダメージブロック (1:物理)
IF BTL_CALC_DAMAGE_BLOCK(ARG:0, ARG:1, ARG:3, 1)
	PRINT BLOCK
	RETURN 0
ENDIF
;---- EDIT 002 ADD END   ---------------------------

;---- EDIT 002 DEL START ---------------------------
;;LOCAL = ARG:2 * MAXBASE:ARG:銃攻撃 * (MAXBASE:ARG:銃攻撃/4+4) / (MAXBASE:(ARG:1):(GET_BATTLESTATUS(2)) * 100) * 3 / 2
;
;LOCAL = (100+MAXBASE:ARG:LV)*(ARG:2)*(MAXBASE:ARG:銃攻撃)*(10+MAXBASE:ARG:銃攻撃/12)
;LOCAL /= (MAXBASE:(ARG:1):防御)*100*100
;;乱数
;SIF LOCAL > 0
;	LOCAL += RAND:3
;LOCAL *= (9500+RAND:1000)
;LOCAL /= 10000
;---- EDIT 002 DEL END   ---------------------------
;---- EDIT 002 ADD START ---------------------------
;- BTL計算:基礎ダメージ
CALL BTL_CALC_BASE_DAMAGE(ARG:0, ARG:1, ARG:2, "飛具")
LOCAL = RESULT
;---- EDIT 002 ADD END   ---------------------------

;---- EDIT 002 DEL START -------------------------
;LOCAL *= (32 + CFLAG:ARG:攻撃強化)
;LOCAL /= (32 + CFLAG:(ARG:1):防御強化)
;SIF CFLAG:ARG:気合フラグ
;	TIMES LOCAL , 2.5
;	IF (HAVE_SKILL(ARG,[[スキル:貫通]]) || HAVE_SKILL(ARG,[[スキル:永世ライドウ]])) && MAXBASE:(ARG:1):(GET_TYPE(ARG:3)) >= 0
;		;貫通持ちは耐性と無効を無視
;		LOCAL *= MAX(100,MAXBASE:(ARG:1):(GET_TYPE(ARG:3)))
;		;ベル・デルは貫通でも0ダメージに
;		SIF NO:(ARG:1) == [[キャラ:ベル・デル]]
;			LOCAL = 0
;	ELSEIF CFLAG:(ARG:1):(GET_TYPE(ARG:3) + "ガードキル") && (MAXBASE:(ARG:1):(GET_TYPE(ARG:3)) < 100 || MAXBASE:(ARG:1):(GET_TYPE(ARG:3)) == 999)
;		;ガードキル効果：耐性以上を完全に無視
;		LOCAL *= 100
;		;LOCAL *= MAX(100,MAXBASE:(ARG:1):(GET_TYPE(ARG:3)))
;		;ベル・デルは貫通でも0ダメージに
;		SIF NO:(ARG:1) == [[キャラ:ベル・デル]]
;			LOCAL = 0
;	ELSE
;		LOCAL *= MAXBASE:(ARG:1):(GET_TYPE(ARG:3))
;	ENDIF
;	LOCAL /= 100
;	LOCALS = %GET_TYPE(ARG:3)%無効化回数
;	IF CFLAG:(ARG:1):LOCALS
;		LOCAL = 0
;		CFLAG:(ARG:1):(GET_TYPE(ARG:3) + "被弾") = 1
;	ENDIF
;	;後列のキャラにはダメージ減少
;	SIF (CFLAG:(ARG:1):ポジション > 3 && CFLAG:(ARG:1):ポジション < 7) || CFLAG:(ARG:1):ポジション > 11
;		TIMES LOCAL,0.60
;	;防御中のキャラにはダメージ減少
;	SIF CFLAG:(ARG:1):防御フラグ
;		LOCAL /= 2
;	IF CFLAG:(ARG:1):PTフラグ > 0
;		SELECTCASE FLAG:戦闘難易度
;			CASE 1
;				TIMES LOCAL,0.75
;			CASE 3,4
;				TIMES LOCAL , 1.5
;			CASE 5
;				TIMES LOCAL , 2
;			CASE 6
;				TIMES LOCAL , 3
;		ENDSELECT
;	ENDIF
;	SIF CFLAG:(ARG:1):PTフラグ == 0 && FLAG:戦闘難易度 == 1
;		TIMES LOCAL , 1.40
;	;眠っていたらダメージ大
;	SIF CFLAG:(ARG:1):ステート == GET_STATE_NUM("SLEEP")
;		TIMES LOCAL,1.5
;	;自身がオルギアでダメージ上昇
;	SIF CFLAG:ARG:ステート == GET_STATE_NUM("ORGY")
;		TIMES LOCAL,1.25
;	;FREEZE時は電撃、SHOCK時は氷結のダメージが倍化
;	SIF CFLAG:(ARG:1):ステート == GET_STATE_NUM("FREEZE") && GET_TYPE(ARG:3) == "電撃" || CFLAG:(ARG:1):ステート == GET_STATE_NUM("SHOCK") && GET_TYPE(ARG:3) == "氷結"
;		TIMES LOCAL,2.0
;	;追撃の心得持ち+1more中は威力が1.5倍
;	SIF CFLAG:ARG:１moreフラグ == 2 && HAVE_SKILL(ARG,[[スキル:追撃の心得]])
;		TIMES LOCAL,1.5 
;	LOCAL = LOCAL * (CFLAG:(ARG:1):物理被ダメージ補正 +100) / 100
;---- EDIT 002 DEL END ---------------------------
;---- EDIT 002 ADD START -------------------------

	;- BTL計算:ダメージ調整 (1:物理)
	CALL BTL_CALC_DAMAGE_ADJUSTMENT(ARG:0, ARG:1, LOCAL, ARG:3, 1)
	LOCAL = RESULT

;---- EDIT 002 ADD END ---------------------------


;---- EDIT 002 DEL START -------------------------
;	;クリティカル判定
;	IF RAND:100 < ARG:4 * (10 + MAXBASE:ARG:運) / (10 + MAXBASE:(ARG:1):運)*(CFLAG:(ARG):クリティカル強化+8)/((HAVE_SKILL(ARG:1,2418)>0)+1)*((HAVE_SKILL(ARG,2419)>0)+2)/8 * (CFLAG:ARG:クリティカル補正+100) / 100
;		TIMES LOCAL , 1.50
;		PRINTFORM 《CRITICAL》 
;		LOCAL:1 += 2
;	ELSEIF HAVE_SKILL(ARG,[[スキル:煌天の会心]]) && FLAG:月齢 == 8 || HAVE_SKILL(ARG,[[スキル:静天の会心]]) && FLAG:月齢 == 0
;		TIMES LOCAL , 1.50
;		PRINTFORM 《CRITICAL》 
;		LOCAL:1 += 2
;	ELSE
;		SELECTCASE GET_STATE(CFLAG:(ARG:1):ステート)
;			CASE "SLEEP","SHOCK","FREEZE"
;				TIMES LOCAL , 1.50
;				PRINTFORM 《CRITICAL》 
;				LOCAL:1 += 2
;		ENDSELECT
;	ENDIF
;	IF LOCAL >= BASE:(ARG:1):ＨＰ && (HAVE_SKILL(ARG:1,2407) || (EQUIP:(ARG:1):BaBel && FLAG:ベル神撃破 & 8)) && CFLAG:(ARG:1):食いしばりフラグ == 0
;		PRINTFORM {LOCAL} DAMAGE
;		CALL VAR_HP,ARG:1,-LOCAL,2
;		CFLAG:(ARG:1):食いしばりフラグ = 1
;	ELSEIF  LOCAL >= BASE:(ARG:1):ＨＰ && HAVE_SKILL(ARG:1,2406) && CFLAG:(ARG:1):食いしばりフラグ == 0
;		PRINTFORM {LOCAL} DAMAGE
;		CALL VAR_HP,ARG:1,-LOCAL,1
;		CFLAG:(ARG:1):食いしばりフラグ = 1
;	ELSEIF  LOCAL >= BASE:(ARG:1):ＨＰ && HAVE_SKILL(ARG:1,2434)
;		;アルカナシフトを持ってる限り食いしばります。
;		PRINTFORM {LOCAL} DAMAGE
;		CALL VAR_HP,ARG:1,-LOCAL,4
;		CFLAG:(ARG:1):食いしばりフラグ = 1
;	ELSEIF LOCAL >= 0
;		PRINTFORM {LOCAL} DAMAGE
;		CALL VAR_HP,ARG:1,-LOCAL,0
;	ELSE
;		PRINTFORM {-LOCAL}回復
;		CALL VAR_HP,ARG:1,-LOCAL,3
;		;わざわざスナッピーの為に何をしているんだ俺は
;		CFLAG:(ARG:1):ダメージ吸収量 -= LOCAL
;	ENDIF
;	SIF CFLAG:(ARG:1):ステート == GET_STATE_NUM("SLEEP") && LOCAL > 0
;		CFLAG:(ARG:1):ステート = 0
;---- EDIT 002 DEL END ---------------------------
;---- EDIT 002 ADD START -------------------------

	;- BTL計算:ダメージ実行 (1:物理)
	CALL BTL_CALC_DAMAGE_EXE(ARG:0, ARG:1, LOCAL, ARG:3, 1, ARG:4)
	LOCAL	= RESULT:0
	LOCAL:1	= RESULT:1

;---- EDIT 002 ADD END ---------------------------

	;口上用にフラグ保存
	CALL BATTLE_EVENT_ATTACK, ARG , ARG:1, LOCAL, 1

;---- EDIT 002 DEL START -------------------------
;	;COOP or 1moreのフラグ立て
;	SIF MAXBASE:(ARG:1):(GET_TYPE(ARG:3)) > 100 && MAXBASE:(ARG:1):(GET_TYPE(ARG:3)) != 999
;		LOCAL:1 += 1
;	;弱点を付かれ、防御しておらず、ダメージを受けており、瀕死になっていなければＣＯＯＰの対象に
;	;行動者が敵なら、
;	IF CFLAG:(ARG:1):ステート != GET_STATE_NUM("DYING") && LOCAL > 0 && CFLAG:(ARG:1):防御フラグ == 0 && LOCAL:1
;		IF CFLAG:ARG:PTフラグ > 0
;			SIF LOCAL:1 & 1
;				CFLAG:(ARG:1):ＣＯＯＰフラグ += ARG:2/(1+(CFLAG:(ARG:1):ＣＯＯＰフラグ > 0))
;			SIF LOCAL:1 & 2
;				CFLAG:(ARG:1):ＣＯＯＰフラグ += ARG:2/2/(1+(CFLAG:(ARG:1):ＣＯＯＰフラグ > 0))
;		ELSEIF CFLAG:ARG:PTフラグ != CFLAG:(ARG:1):PTフラグ && CFLAG:ARG:１moreフラグ == 0
;			CFLAG:ARG:１moreフラグ = 1
;		ENDIF
;	ENDIF
;---- EDIT 002 DEL END ---------------------------
;---- EDIT 002 ADD START -------------------------

	;- BTL計算:COOP (1:物理)
	CALL BTL_CALC_DAMAGE_COOP(ARG:0, ARG:1, LOCAL, ARG:3, 1, LOCAL:1, ARG:2)

;---- EDIT 002 ADD END ---------------------------





;=========================================
;単体攻撃スキル基本
;=========================================

@GUN_SINGLE,ARG,ARG:1,ARG:2
;コストを支払う

;攻撃回数算出
CALLFORM SKILL_MAXATTACKNUMBER_{ARG:2},ARG
LOCAL = RESULT + 1
CALLFORM SKILL_MINATTACKNUMBER_{ARG:2},ARG
LOCAL -= RESULT
LOCAL:1 = RESULT + RAND:LOCAL
;LOCAL:1 攻撃回数

;追加効果を参照
TRYCCALLFORM SKILL_ADDTIONAL_STATE_{ARG:2},ARG
	LOCAL:6 = RESULT
	CALLFORM SKILL_ADDTIONAL_TYPE_{ARG:2},ARG
	LOCAL:7 = RESULT
	CALLFORM SKILL_ADDTIONAL_BASE_RATE_{ARG:2},ARG
	LOCAL:8 = RESULT
	CALLFORM SKILL_ADDTIONAL_MAX_RATE_{ARG:2},ARG
	LOCAL:9 = RESULT
CATCH
ENDCATCH

FOR LOCAL:10,0,LOCAL:1
	FLAG:攻撃回数 = LOCAL:10
	CALLFORM SKILL_HITRATE_{ARG:2}, ARG
	LOCAL:2 = RESULT
	;LOCAL:2 スキル命中率
	CALLFORM SKILL_POWER_{ARG:2}, ARG
	LOCAL:3 = RESULT
	;LOCAL:3 スキル威力
	CALLFORM SKILL_TYPE_{ARG:2},ARG
	LOCAL:4 = RESULT
	;LOCAL:4 スキル相性
	CALLFORM SKILL_DAMAGETYPE_{ARG:2}
	LOCAL:5 = RESULT
	;LOCAL:5 与えるダメージの物理/魔法
	LOCAL:11 = 0
	

	TRYCCALLFORM SKILL_CRITICAL_RATE_{ARG:2}
		LOCAL:12 = RESULT
	CATCH
		LOCAL:12 = 5
	ENDCATCH
	
	PRINTFORM 　　TARGET:[{CPOS(ARG:1),2}] %CALLNAME:(ARG:1),20,LEFT%　>>>>>>　

	CALLFORM JUDG_HIT_GUN,ARG,ARG:1,LOCAL:2
	IF RESULT == 1
		;命中した
		IF (MAXBASE:(ARG:1):(GET_TYPE(LOCAL:4)) == 999 && !CFLAG:(ARG:1):(GET_TYPE(LOCAL:4)+"ガードキル")) || (CFLAG:(ARG:1):物理反射フラグ && LOCAL:4 < 4) || (CFLAG:(ARG:1):魔法反射フラグ && (LOCAL:4 > 3 && LOCAL:4 != 17))
			PRINTL Oops it was reflected
			PRINTFORM 　　TARGET:[{CPOS(ARG),2}] %CALLNAME:ARG,20,LEFT%　>>>>>>　
			CALLFORM DAMAGE_GUN,ARG,ARG,LOCAL:3,LOCAL:4,LOCAL:12
			IF LOCAL:6 > 0 && CFLAG:(ARG):ステート < GET_STATE_NUM("DYING")
				PRINT  & 
				CALL ATTACK_BADSTATE,ARG,ARG,LOCAL:6,LOCAL:7,LOCAL:8,LOCAL:9
			ELSE
				PRINTW
			ENDIF
			;口上用に数値確保
			CALL BATTLE_EVENT_ATTACK, ARG, ARG:1, 0, 3
		ELSE
			CALLFORM DAMAGE_GUN,ARG,ARG:1,LOCAL:3,LOCAL:4,LOCAL:12
			IF LOCAL:6 > 0 && CFLAG:(ARG:1):ステート < GET_STATE_NUM("DYING")
				PRINT  & 
				CALL ATTACK_BADSTATE,ARG,ARG:1,LOCAL:6,LOCAL:7,LOCAL:8,LOCAL:9
			ELSE
				PRINTW
			ENDIF
		ENDIF
	ELSE
		;外した
		PRINTW MISS
		;口上用に数値確保
		CALL BATTLE_EVENT_ATTACK, ARG, ARG:1, 0, 2
	ENDIF
	TRYCALLFORM SKILL_GUN_SPECIALACTION{ARG:2}, ARG, ARG:1
	FLAG:攻撃回数 = 0
	SIF GET_STATE(CFLAG:(ARG:1):ステート) == "DYING"
		BREAK
NEXT

;=========================================
;全体・列攻撃スキル基本
;=========================================
@GUN_FIELD,ARG,ARG:1,ARG:2
;攻撃する範囲を参照
IF ARG:1 == 17
	LOCAL:7 = 1
	LOCAL:8 = 4
ELSEIF ARG:1 == 18
	LOCAL:7 = 4
	LOCAL:8 = 7
ELSEIF ARG:1 == 19
	LOCAL:7 = 1
	LOCAL:8 = 7
ELSEIF ARG:1 == 20
	LOCAL:7 = 7
	LOCAL:8 = 12
ELSEIF ARG:1 == 21
	LOCAL:7 = 12
	LOCAL:8 = 17
ELSEIF ARG:1 == 22
	LOCAL:7 = 7
	LOCAL:8 = 17
ENDIF


;攻撃回数算出
CALLFORM SKILL_MAXATTACKNUMBER_{ARG:2},ARG
LOCAL = RESULT + 1
CALLFORM SKILL_MINATTACKNUMBER_{ARG:2},ARG
LOCAL -= RESULT
LOCAL:1 = RESULT + RAND:LOCAL
;LOCAL:1 攻撃回数

;追加効果を参照
TRYCCALLFORM SKILL_ADDTIONAL_STATE_{ARG:2}
	LOCAL:10 = RESULT
	CALLFORM SKILL_ADDTIONAL_TYPE_{ARG:2}
	LOCAL:11 = RESULT
	CALLFORM SKILL_ADDTIONAL_BASE_RATE_{ARG:2}
	LOCAL:12 = RESULT
	CALLFORM SKILL_ADDTIONAL_MAX_RATE_{ARG:2}
	LOCAL:13 = RESULT
CATCH
ENDCATCH

FOR LOCAL:9,LOCAL:7,LOCAL:8
	FOR LOCAL:6,0,LOCAL:1
		FLAG:攻撃回数 = LOCAL:6
		CALLFORM SKILL_HITRATE_{ARG:2}, ARG
		LOCAL:2 = RESULT
		;LOCAL:2 スキル命中率
		CALLFORM SKILL_POWER_{ARG:2}, ARG
		LOCAL:3 = RESULT
		;LOCAL:3 スキル威力
		CALLFORM SKILL_TYPE_{ARG:2},ARG
		LOCAL:4 = RESULT
		;LOCAL:4 スキル相性
		CALLFORM SKILL_DAMAGETYPE_{ARG:2}
		LOCAL:5 = RESULT
		;LOCAL:5 与えるダメージの物理/魔法
		;ＨＰ消費物理スキルなら追加威力参照
		;CALLFORM SKILL_COSTTYPE_{ARG:2}, ARG
		;IF RESULT == 2
		;	CALLFORM SKILL_COST_{ARG:2}, ARG
		;	LOCAL:14 = MAXBASE:ARG:ＨＰ * RESULT / 100
		;	SIF CFLAG:ARG:ボスフラグ
		;		LOCAL:14 /= 10
		;ENDIF
		;LOCAL:15 クリティカル補正
		TRYCCALLFORM SKILL_CRITICAL_RATE_{ARG:2}
			LOCAL:15 = RESULT
		CATCH
			LOCAL:15 = 5
		ENDCATCH
		LOCALS = ポジション{LOCAL:9}
		SIF FLAG:LOCALS < 0
			CONTINUE
		SIF GET_STATE(CFLAG:(FLAG:LOCALS):ステート) == "DYING"
			CONTINUE
		PRINTFORM 　　TARGET:[{CPOS(FLAG:LOCALS),2}] %CALLNAME:(FLAG:LOCALS),20,LEFT%　>>>>>>　
		CALLFORM JUDG_HIT_GUN,ARG,FLAG:LOCALS,LOCAL:2
		IF RESULT == 1
			;命中した
			IF (MAXBASE:(FLAG:LOCALS):(GET_TYPE(LOCAL:4)) == 999 && !CFLAG:(FLAG:LOCALS):(GET_TYPE(LOCAL:4)+"ガードキル")) || (CFLAG:(FLAG:LOCALS):物理反射フラグ && LOCAL:4 < 4) || (CFLAG:(FLAG:LOCALS):魔法反射フラグ && (LOCAL:4 > 3 && LOCAL:4 != 17))
				PRINTL Oops it was reflected
				PRINTFORM 　　TARGET:[{CPOS(ARG),2}] %CALLNAME:ARG,20,LEFT%　>>>>>>　
				;CALLFORM DAMAGE_GUN,ARG,ARG,LOCAL:3,LOCAL:4,LOCAL:14,LOCAL:15
				CALLFORM DAMAGE_GUN,ARG,ARG,LOCAL:3,LOCAL:4,LOCAL:15
				IF LOCAL:10 > 0 && CFLAG:(ARG):ステート < GET_STATE_NUM("DYING")
					PRINT  & 
					CALL ATTACK_BADSTATE,ARG,ARG,LOCAL:10,LOCAL:11,LOCAL:12,LOCAL:13
				ELSE
				PRINTW
				ENDIF
				;口上用に数値確保
				CALL BATTLE_EVENT_ATTACK, ARG, FLAG:LOCALS, 0, 3
			ELSE
				;CALLFORM DAMAGE_GUN,ARG,FLAG:LOCALS,LOCAL:3,LOCAL:4,LOCAL:14,LOCAL:15
				CALLFORM DAMAGE_GUN,ARG,FLAG:LOCALS,LOCAL:3,LOCAL:4,LOCAL:15
				IF LOCAL:10 > 0 && FLAG:LOCALS > -1 && CFLAG:(FLAG:LOCALS):ステート < GET_STATE_NUM("DYING")
					PRINT  & 
					CALL ATTACK_BADSTATE,ARG,FLAG:LOCALS,LOCAL:10,LOCAL:11,LOCAL:12,LOCAL:13
				ELSE
					PRINTW
				ENDIF
			ENDIF
			
		ELSE
			;外した
			PRINTW MISS
			;口上用に数値確保
			CALL BATTLE_EVENT_ATTACK, ARG, FLAG:LOCALS, 0, 2
		ENDIF
		TRYCALLFORM SKILL_GUN_SPECIALACTION{ARG:2}, ARG, FLAG:LOCALS
		FLAG:攻撃回数 = 0
	NEXT
NEXT


;=========================================
;ランダム攻撃スキル基本
;=========================================
@GUN_RAND,ARG,ARG:1,ARG:2
;コストを支払う
;CALL PAY_COST,ARG,ARG:2

;攻撃する範囲を参照
IF ARG:1 == 17
	LOCAL:7 = 1
	LOCAL:8 = 4
ELSEIF ARG:1 == 18
	LOCAL:7 = 4
	LOCAL:8 = 7
ELSEIF ARG:1 == 19
	LOCAL:7 = 1
	LOCAL:8 = 7
ELSEIF ARG:1 == 20
	LOCAL:7 = 7
	LOCAL:8 = 12
ELSEIF ARG:1 == 21
	LOCAL:7 = 12
	LOCAL:8 = 17
ELSEIF ARG:1 == 22
	LOCAL:7 = 7
	LOCAL:8 = 17
ENDIF


;攻撃回数算出
CALLFORM SKILL_MAXATTACKNUMBER_{ARG:2},ARG
LOCAL = RESULT + 1
CALLFORM SKILL_MINATTACKNUMBER_{ARG:2},ARG
LOCAL -= RESULT
LOCAL:1 = RESULT + RAND:LOCAL
;LOCAL:1 攻撃回数
CALLFORM SKILL_HITRATE_{ARG:2}, ARG
LOCAL:2 = RESULT
;LOCAL:2 スキル命中率
CALLFORM SKILL_POWER_{ARG:2}, ARG
LOCAL:3 = RESULT
;LOCAL:3 スキル威力
CALLFORM SKILL_TYPE_{ARG:2},ARG
LOCAL:4 = RESULT
;LOCAL:4 スキル相性
CALLFORM SKILL_DAMAGETYPE_{ARG:2}
LOCAL:5 = RESULT
;LOCAL:5 与えるダメージの物理/魔法

LOCAL:10 = 0

;追加効果を参照
TRYCCALLFORM SKILL_ADDTIONAL_STATE_{ARG:2}
	LOCAL:10 = RESULT
	CALLFORM SKILL_ADDTIONAL_TYPE_{ARG:2}
	LOCAL:11 = RESULT
	CALLFORM SKILL_ADDTIONAL_BASE_RATE_{ARG:2}
	LOCAL:12 = RESULT
	CALLFORM SKILL_ADDTIONAL_MAX_RATE_{ARG:2}
	LOCAL:13 = RESULT
CATCH
ENDCATCH

;LOCAL:15 クリティカル補正
TRYCCALLFORM SKILL_CRITICAL_RATE_{ARG:2}
	LOCAL:15 = RESULT
CATCH
	LOCAL:15 = 5
ENDCATCH
		
FOR LOCAL,0,LOCAL:1
	FOR LOCAL:14,LOCAL:7,LOCAL:8
		LOCALS = ポジション{LOCAL:14}
		SIF FLAG:LOCALS > -1 && GET_STATE(CFLAG:(FLAG:LOCALS):ステート) != "DYING"
			GOTO END_FOR
		SIF LOCAL:14 == LOCAL:8-1
			RETURN 0
	NEXT
	
	$END_FOR
	$DECIDE_TARGET
	LOCALS = ポジション{RAND:(LOCAL:8-LOCAL:7)+LOCAL:7}
	SIF FLAG:LOCALS < 0
		GOTO DECIDE_TARGET
	
	SIF GET_STATE(CFLAG:(FLAG:LOCALS):ステート) == "DYING"
		GOTO DECIDE_TARGET
	PRINTFORM 　　TARGET:[{CPOS(FLAG:LOCALS),2}] %CALLNAME:(FLAG:LOCALS),20,LEFT%　>>>>>>　
	CALLFORM JUDG_HIT_GUN,ARG,FLAG:LOCALS,LOCAL:2
	IF RESULT == 1
			;命中した
			IF (MAXBASE:(FLAG:LOCALS):(GET_TYPE(LOCAL:4)) == 999 && !CFLAG:(FLAG:LOCALS):(GET_TYPE(LOCAL:4)+"ガードキル")) || (CFLAG:(FLAG:LOCALS):物理反射フラグ && LOCAL:4 < 4) || (CFLAG:(FLAG:LOCALS):魔法反射フラグ && (LOCAL:4 > 3 && LOCAL:4 != 17))
				PRINTL Oops it was reflected
				PRINTFORM 　　TARGET:[{CPOS(ARG),2}] %CALLNAME:ARG,20,LEFT%　>>>>>>　
				CALLFORM DAMAGE_GUN,ARG,ARG,LOCAL:3,LOCAL:4,LOCAL:15
				IF LOCAL:10 > 0 && CFLAG:(ARG):ステート < GET_STATE_NUM("DYING")
					PRINT  & 
					CALL ATTACK_BADSTATE,ARG,ARG,LOCAL:10,LOCAL:11,LOCAL:12,LOCAL:13
				ELSE
				PRINTW
				ENDIF
				;口上用に数値確保
				CALL BATTLE_EVENT_ATTACK, ARG, FLAG:LOCALS, 0, 3
			ELSE
				CALLFORM DAMAGE_GUN,ARG,FLAG:LOCALS,LOCAL:3,LOCAL:4,LOCAL:15
				IF LOCAL:10 > 0 && FLAG:LOCALS > -1 && CFLAG:(FLAG:LOCALS):ステート < GET_STATE_NUM("DYING")
					PRINT  & 
					CALL ATTACK_BADSTATE,ARG,FLAG:LOCALS,LOCAL:10,LOCAL:11,LOCAL:12,LOCAL:13
				ELSE
					PRINTW
				ENDIF
			ENDIF
	ELSE
		;外した
		PRINTW MISS
		;口上用に数値確保
		CALL BATTLE_EVENT_ATTACK, ARG, FLAG:LOCALS, 0, 2
	ENDIF
	CALL ACTIONABLE_CHARA,ARG
	SIF RESULT == 0
		RETURN 0
	TRYCALLFORM SKILL_GUN_SPECIALACTION{ARG:2}, ARG, FLAG:LOCALS
NEXT


;============================================================================
;特定の特殊弾を装備しているかの判定
;============================================================================
@HAVE_BULLET,ARG,ARG:1
#FUNCTION
SIF EQUIP:ARG:銃 == 0
	RETURNF 0
FOR LOCAL,1,9
	SIF EQUIP:ARG:("特殊弾" + TOSTR(LOCAL)) == ARG:1
		RETURNF 1
NEXT

