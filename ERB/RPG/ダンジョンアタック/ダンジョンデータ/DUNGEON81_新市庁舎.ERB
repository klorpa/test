
;=======================================================================
;
;=======================================================================

;=======================================================================
;攻略条件
;=======================================================================
@PREREQUISITE_DUNGEON_81
IF  ダンジョンフラグ:84:0 == 1 & !ダンジョンフラグ:81:0
	RETURN 1
ENDIF

;=======================================================================
;ダンジョン名
;=======================================================================
@GET_DUNGEON_NAME_81
RESULTS = New Town Hall
;新市庁舎

@FLOORNAME_81
PRINT New Town Hall 
SELECTCASE FLAG:現M
	CASE 0
		PRINTL 1F
	CASE 1
		PRINTL 10F
	CASE 2
		PRINTL 15F
	CASE 3
		PRINTL 20F
	CASE 4
		PRINTL 25F
	CASE 5
		PRINTL 30F
	CASE 6
		PRINTL 35F
	CASE 7
		PRINTL 40F
	CASE 8
		PRINTL 45F
	CASE 9
		PRINTL 50F
	CASE 10
		PRINTL 55F
	CASE 11
		PRINTL 60F
ENDSELECT

;=======================================================================
;スタート地点入力
;=======================================================================
@START_DUNGEON_81, ARG
FLAG:現M = 0
FLAG:現X = 6
FLAG:現Y =11
RETURN 0

;=======================================================================
;スタート時イベント
;=======================================================================
@EVENT_DUNGEON_START_81
IF ダンジョンフラグ:81:1 == 0
	CALL SHOW_PICTURE, "NONFLOORD"
	CALL MESSAGE_WINDOW_D, "", @"＞Now that you defeated quite a few henchmen,/＞it's become apparent that someone at the New Town Hall has been pulling their strings./＞You went there to expose and elimate the one behind this."
	;計画を乗っ取り一連の裏切り者達を束ねていた元の大幹部の始末が命じられた
	ダンジョンフラグ:81:1 = 1
ENDIF


;=======================================================================
;指定したマスに進入可能か
;=======================================================================
@CAN_ENTER_81, ARG, ARG:1
SELECTCASE DA:ARG:(ARG:1)
	CASE 12
		;↑
		IF ARG:1 > FLAG:現Y
			CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, ARG, ARG:1)
			CALL MESSAGE_WINDOW_D, "", "＞The door is won't open."
			RETURN 0
		ENDIF

	CASE 22
		;↓
		IF ARG:1 < FLAG:現Y
			CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, ARG, ARG:1)
			CALL MESSAGE_WINDOW_D, "", "＞The door is won't open."
			RETURN 0
		ENDIF

	CASE 32
		;←
		IF ARG > FLAG:現X
			CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, ARG, ARG:1)
			CALL MESSAGE_WINDOW_D, "", "＞The door won't open."
			RETURN 0
		ENDIF

	CASE 42
		;→
		IF ARG < FLAG:現X
			CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, ARG, ARG:1)
			CALL MESSAGE_WINDOW_D, "", "＞The door won't open"
			RETURN 0
		ENDIF

	CASE 52
		IF ダンジョンフラグ:81:1 == 1
			CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, ARG, ARG:1)
			CALL MESSAGE_WINDOW_D, "", "＞It's locked."
			RETURN 0
		ENDIF
	CASEELSE
ENDSELECT
CALL CAN_ENTER,ARG,ARG:1
RETURN RESULT

;=======================================================================
;フロアデータ
;=======================================================================
@MAKE_FLOOR_81
SELECTCASE FLAG:現M
	CASE 0
		FLAG:最大X = 13
		FLAG:最大Y = 16
							;	  01234567890123
   		CALL MAKE_FLOOR_LINE, 0, "             "
   		CALL MAKE_FLOOR_LINE, 1, " 1a1 ! 11121 "
   		CALL MAKE_FLOOR_LINE, 2, " 2 2 2 2 1 1 "
   		CALL MAKE_FLOOR_LINE, 3, " 1 3 1 p 1 1 "
   		CALL MAKE_FLOOR_LINE, 4, " 1   1   1   "
   		CALL MAKE_FLOOR_LINE, 5, " 11 11e  1   "
   		CALL MAKE_FLOOR_LINE, 6, " b1      1   "
   		CALL MAKE_FLOOR_LINE, 7, " 2       1 1 "
   		CALL MAKE_FLOOR_LINE, 8, " 112111111 1 "
   		CALL MAKE_FLOOR_LINE, 9, " 11   2    1 "
   		CALL MAKE_FLOOR_LINE,10, " 2  11111211 "
   		CALL MAKE_FLOOR_LINE,11, " 1  11111  1 "
   		CALL MAKE_FLOOR_LINE,12, " 1    2    1 "
   		CALL MAKE_FLOOR_LINE,13, " 2    8    2 "
   		CALL MAKE_FLOOR_LINE,14, " '         3 "
   		CALL MAKE_FLOOR_LINE,15, "             "

	CASE 1
		FLAG:最大X = 24
		FLAG:最大Y = 15
							;	  0123456789012345678901234
   		CALL MAKE_FLOOR_LINE, 0, "                        "
   		CALL MAKE_FLOOR_LINE, 1, " 1A11 ! 111<111111      "
   		CALL MAKE_FLOOR_LINE, 2, " 1  2 2  1   11  2      "
   		CALL MAKE_FLOOR_LINE, 3, " 1 c111  1  11   11     "
   		CALL MAKE_FLOOR_LINE, 4, " 1  111  1 11 111 1     "
   		CALL MAKE_FLOOR_LINE, 5, " 1    2  1 1  1 2 111   "
   		CALL MAKE_FLOOR_LINE, 6, " 121 11111 1211 1 2 1 # "
   		CALL MAKE_FLOOR_LINE, 7, " 3 1            1 1 1 2 "
   		CALL MAKE_FLOOR_LINE, 8, " B 11211 11    11 1 111 "
   		CALL MAKE_FLOOR_LINE, 9, " 121  11 11  111  1     "
   		CALL MAKE_FLOOR_LINE,10, " 1     2  2   1  113    "
   		CALL MAKE_FLOOR_LINE,11, " 1 111 1111   12111     "
   		CALL MAKE_FLOOR_LINE,12, " 2 2 1  ^        2      "
   		CALL MAKE_FLOOR_LINE,13, " ' % 1211112111211      "
   		CALL MAKE_FLOOR_LINE,14, "                        "

	CASE 2
		FLAG:最大X = 15
		FLAG:最大Y = 15
							;	  0123456789012345
   		CALL MAKE_FLOOR_LINE, 0, "               "
   		CALL MAKE_FLOOR_LINE, 1, " 11111 ! 11111 "
   		CALL MAKE_FLOOR_LINE, 2, " 2 2 1 2 2   2 "
   		CALL MAKE_FLOOR_LINE, 3, " 1 C 1 1 P   1 "
   		CALL MAKE_FLOOR_LINE, 4, "     1 1     1 "
   		CALL MAKE_FLOOR_LINE, 5, " 11111 1 E21 1 "
   		CALL MAKE_FLOOR_LINE, 6, " 1     1   1 1 "
   		CALL MAKE_FLOOR_LINE, 7, " 1 11111 111 1 "
   		CALL MAKE_FLOOR_LINE, 8, " 1  2      2 2 "
   		CALL MAKE_FLOOR_LINE, 9, " 1  11111  111 "
   		CALL MAKE_FLOOR_LINE,10, " 2      11   1 "
   		CALL MAKE_FLOOR_LINE,11, " 111111      1 "
   		CALL MAKE_FLOOR_LINE,12, " 1    11     1 "
   		CALL MAKE_FLOOR_LINE,13, " '     1111111 "
   		CALL MAKE_FLOOR_LINE,14, "               "

	CASE 3
		FLAG:最大X = 17
		FLAG:最大Y = 12
							;	  012345678901234567
   		CALL MAKE_FLOOR_LINE, 0, "                 "
   		CALL MAKE_FLOOR_LINE, 1, " 111   ! 121 111 "
   		CALL MAKE_FLOOR_LINE, 2, " 2 111 2 1 1 2 2 "
   		CALL MAKE_FLOOR_LINE, 3, " 1 2 1 1 1211111 "
   		CALL MAKE_FLOOR_LINE, 4, " 1 6 1>1   1   1 "
   		CALL MAKE_FLOOR_LINE, 5, " 1     111111111 "
   		CALL MAKE_FLOOR_LINE, 6, " 1 31121   1   1 "
   		CALL MAKE_FLOOR_LINE, 7, " 1     1   1   1 "
   		CALL MAKE_FLOOR_LINE, 8, " 111211111111111 "
   		CALL MAKE_FLOOR_LINE, 9, "       1   1   1 "
   		CALL MAKE_FLOOR_LINE,10, "       111111111 "
   		CALL MAKE_FLOOR_LINE,11, "                 "

	CASE 4
		FLAG:最大X = 26
		FLAG:最大Y = 27
							;	  012345678901234567890123456
   		CALL MAKE_FLOOR_LINE, 0, "                          "
   		CALL MAKE_FLOOR_LINE, 1, "   3 1111111 11111111     "
   		CALL MAKE_FLOOR_LINE, 2, "  11 1     1 1      2 1   "
   		CALL MAKE_FLOOR_LINE, 3, " 113 1 1<121 1   1111 121 "
   		CALL MAKE_FLOOR_LINE, 4, " 2   1 _ ^   1   2    1 1 "
   		CALL MAKE_FLOOR_LINE, 5, " 11  2 1>12111   1111 1 1 "
   		CALL MAKE_FLOOR_LINE, 6, " 11  1 _            2 1 1 "
   		CALL MAKE_FLOOR_LINE, 7, " 1   1 1  !      1111 1 1 "
   		CALL MAKE_FLOOR_LINE, 8, " 1   1 1  2      2    1 1 "
   		CALL MAKE_FLOOR_LINE, 9, " 1 111 12111 121 112111 1 "
   		CALL MAKE_FLOOR_LINE,10, " 1 11    11121          1 "
   		CALL MAKE_FLOOR_LINE,11, " 1 2   7  1             1 "
   		CALL MAKE_FLOOR_LINE,12, " 111   2  ^         11211 "
   		CALL MAKE_FLOOR_LINE,13, " 1     11 111112111<11    "
   		CALL MAKE_FLOOR_LINE,14, " 111>121121   1      1  # "
   		CALL MAKE_FLOOR_LINE,15, " 1 1      1   1      1  2 "
   		CALL MAKE_FLOOR_LINE,16, " 1 111  (211111      1 11 "
   		CALL MAKE_FLOOR_LINE,17, " 1 1 2      2        1211 "
   		CALL MAKE_FLOOR_LINE,18, " 1 1 $ 111  1             "
   		CALL MAKE_FLOOR_LINE,19, " 1 1   2 1  1  1111111111 "
   		CALL MAKE_FLOOR_LINE,20, " 1 111 % 1  1 11     2  1 "
   		CALL MAKE_FLOOR_LINE,21, " 1   1   1  ^ 1     11  1 "
   		CALL MAKE_FLOOR_LINE,22, " 111 1   1  1 12&  11  11 "
   		CALL MAKE_FLOOR_LINE,23, " 11  1  111 1      11  11 "
   		CALL MAKE_FLOOR_LINE,24, "  11 1  1   1 11      11  "
   		CALL MAKE_FLOOR_LINE,25, "   111  121112111111111   "
   		CALL MAKE_FLOOR_LINE,26, "                          "

	CASE 5
		FLAG:最大X = 13
		FLAG:最大Y = 11
							;	  01234567890123
   		CALL MAKE_FLOOR_LINE, 0, "             "
   		CALL MAKE_FLOOR_LINE, 1, " 1111111 111 "
   		CALL MAKE_FLOOR_LINE, 2, " 1     2   1 "
   		CALL MAKE_FLOOR_LINE, 3, " 1 f21 1g121 "
   		CALL MAKE_FLOOR_LINE, 4, " 1   1   1 1 "
   		CALL MAKE_FLOOR_LINE, 5, " 11  1>1 1   "
   		CALL MAKE_FLOOR_LINE, 6, " 1     111 h "
   		CALL MAKE_FLOOR_LINE, 7, " 1 111     1 "
   		CALL MAKE_FLOOR_LINE, 8, " 2   1     2 "
   		CALL MAKE_FLOOR_LINE, 9, " ) (21111111 "
   		CALL MAKE_FLOOR_LINE,10, "             "

	CASE 6
		FLAG:最大X = 16
		FLAG:最大Y = 13
							;	  01234567890123456
   		CALL MAKE_FLOOR_LINE, 0, "                "
   		CALL MAKE_FLOOR_LINE, 1, "   1111 1111111 "
   		CALL MAKE_FLOOR_LINE, 2, " 1 2 1121   111 "
   		CALL MAKE_FLOOR_LINE, 3, " 1 F      G2111 "
   		CALL MAKE_FLOOR_LINE, 4, " 1          1 2 "
   		CALL MAKE_FLOOR_LINE, 5, " 11111>111111 i "
   		CALL MAKE_FLOOR_LINE, 6, " 1            H "
   		CALL MAKE_FLOOR_LINE, 7, " 2     11211 11 "
   		CALL MAKE_FLOOR_LINE, 8, " )   (211 11211 "
   		CALL MAKE_FLOOR_LINE, 9, "       1      2 "
   		CALL MAKE_FLOOR_LINE,10, "       1  11  1 "
   		CALL MAKE_FLOOR_LINE,11, "       11211111 "
   		CALL MAKE_FLOOR_LINE,12, "                "

	CASE 7
		FLAG:最大X = 19
		FLAG:最大Y = 29
							;	  01234567890123456789
   		CALL MAKE_FLOOR_LINE, 0, "                   "
   		CALL MAKE_FLOOR_LINE, 1, "          DDDDDDDD "
   		CALL MAKE_FLOOR_LINE, 2, "        Q DQ Dk  J "
   		CALL MAKE_FLOOR_LINE, 3, "       DDDD D DD   "
   		CALL MAKE_FLOOR_LINE, 4, "       D  Q 2  Q I "
   		CALL MAKE_FLOOR_LINE, 5, "       DDDDDD D  2 "
   		CALL MAKE_FLOOR_LINE, 6, " 1<o26    D   2  j "
   		CALL MAKE_FLOOR_LINE, 7, " 2        2 1111   "
   		CALL MAKE_FLOOR_LINE, 8, " )  (21111q11  ^   "
   		CALL MAKE_FLOOR_LINE, 9, "              111  "
   		CALL MAKE_FLOOR_LINE,10, "            12111  "
   		CALL MAKE_FLOOR_LINE,11, "    111111111      "
   		CALL MAKE_FLOOR_LINE,12, "    2       2      "
   		CALL MAKE_FLOOR_LINE,13, "    $       1      "
   		CALL MAKE_FLOOR_LINE,14, "            ^      "
   		CALL MAKE_FLOOR_LINE,15, "  11111u1111112&   "
   		CALL MAKE_FLOOR_LINE,16, "  1                "
   		CALL MAKE_FLOOR_LINE,17, "  1 1111s1111111   "
   		CALL MAKE_FLOOR_LINE,18, "  V R          1   "
   		CALL MAKE_FLOOR_LINE,19, "  1 1 11111111 1   "
   		CALL MAKE_FLOOR_LINE,20, "  1 1 1      1 1   "
   		CALL MAKE_FLOOR_LINE,21, "  1 1 1 @211 1 1   "
   		CALL MAKE_FLOOR_LINE,22, "  1 1 1    1 1 1   "
   		CALL MAKE_FLOOR_LINE,23, "  1 1 111111 1 1   "
   		CALL MAKE_FLOOR_LINE,24, "  1 1        r v   "
   		CALL MAKE_FLOOR_LINE,25, "  1 111S111111 1   "
   		CALL MAKE_FLOOR_LINE,26, "  1            1   "
   		CALL MAKE_FLOOR_LINE,27, "  111111111U1111   "
   		CALL MAKE_FLOOR_LINE,28, "                   "

	CASE 8
		FLAG:最大X = 16
		FLAG:最大Y = 11
							;	  01234567890123456
   		CALL MAKE_FLOOR_LINE, 0, "                "
   		CALL MAKE_FLOOR_LINE, 1, " 11111   121 1  "
   		CALL MAKE_FLOOR_LINE, 2, " 1   1   1 K211 "
   		CALL MAKE_FLOOR_LINE, 3, " 126 121 1 1  2 "
   		CALL MAKE_FLOOR_LINE, 4, " 1   1 1 1 1211 "
   		CALL MAKE_FLOOR_LINE, 5, " 11111 1 1 2 1  "
   		CALL MAKE_FLOOR_LINE, 6, "       1 n = 1  "
   		CALL MAKE_FLOOR_LINE, 7, " 12111lm 2   1  "
   		CALL MAKE_FLOOR_LINE, 8, " 2       11  1  "
   		CALL MAKE_FLOOR_LINE, 9, " )     7211121  "
   		CALL MAKE_FLOOR_LINE,10, "                "

	CASE 9
		FLAG:最大X = 16
		FLAG:最大Y = 15
							;	  01234567890123456
   		CALL MAKE_FLOOR_LINE, 0, "                "
   		CALL MAKE_FLOOR_LINE, 1, " 11111111 11111 "
   		CALL MAKE_FLOOR_LINE, 2, " 1      1 1   1 "
   		CALL MAKE_FLOOR_LINE, 3, " 1 721121 1 1 1 "
   		CALL MAKE_FLOOR_LINE, 4, " 1        1 2 1 "
   		CALL MAKE_FLOOR_LINE, 5, " 1 111111 111 1 "
   		CALL MAKE_FLOOR_LINE, 6, " 1 2    2     1 "
   		CALL MAKE_FLOOR_LINE, 7, " 11111LMN 111 1 "
   		CALL MAKE_FLOOR_LINE, 8, " 2     11 2 1 1 "
   		CALL MAKE_FLOOR_LINE, 9, " 1   6211 = 1 1 "
   		CALL MAKE_FLOOR_LINE,10, " 1      2     1 "
   		CALL MAKE_FLOOR_LINE,11, " 11211111    11 "
   		CALL MAKE_FLOOR_LINE,12, "  1     121  2  "
   		CALL MAKE_FLOOR_LINE,13, "  1211111 1111  "
   		CALL MAKE_FLOOR_LINE,14, "                "

	CASE 10
		FLAG:最大X = 15
		FLAG:最大Y = 14
							;	  0123456789012345
   		CALL MAKE_FLOOR_LINE, 0, "               "
   		CALL MAKE_FLOOR_LINE, 1, " w1111111W   X "
   		CALL MAKE_FLOOR_LINE, 2, "   2 1 2     1 "
   		CALL MAKE_FLOOR_LINE, 3, " 111 1 111   1 "
   		CALL MAKE_FLOOR_LINE, 4, " 2   1   2   1 "
   		CALL MAKE_FLOOR_LINE, 5, " 111 y 111   1 "
   		CALL MAKE_FLOOR_LINE, 6, "   2   2     1 "
   		CALL MAKE_FLOOR_LINE, 7, " O 111 1 111 1 "
   		CALL MAKE_FLOOR_LINE, 8, " 2   1 x 2 1 1 "
   		CALL MAKE_FLOOR_LINE, 9, " 1 721   = 1 1 "
   		CALL MAKE_FLOOR_LINE,10, " 1           1 "
   		CALL MAKE_FLOOR_LINE,11, " 1211111111121 "
   		CALL MAKE_FLOOR_LINE,12, "             Y "
   		CALL MAKE_FLOOR_LINE,13, "               "

	CASE 11
		FLAG:最大X = 13
		FLAG:最大Y = 11
							;	  01234567890123
   		CALL MAKE_FLOOR_LINE, 0, "             "
   		CALL MAKE_FLOOR_LINE, 1, "      @      "
   		CALL MAKE_FLOOR_LINE, 2, "      2      "
   		CALL MAKE_FLOOR_LINE, 3, "  31  1  11  "
   		CALL MAKE_FLOOR_LINE, 4, "  112111211  "
   		CALL MAKE_FLOOR_LINE, 5, "      1  2   "
   		CALL MAKE_FLOOR_LINE, 6, "      ~  =   "
   		CALL MAKE_FLOOR_LINE, 7, " 111 111     "
   		CALL MAKE_FLOOR_LINE, 8, " 2 1 1 1 111 "
   		CALL MAKE_FLOOR_LINE, 9, " $ 121112113 "
   		CALL MAKE_FLOOR_LINE,10, "             "

	CASEELSE
ENDSELECT
;=======================================================================
;特殊タイル表示
;=======================================================================
@TILE_MARK_COMMON_81_1, ARG , ARG:1 , ARG:2
;IF FLAG:DEBUG
;SELECTCASE DA:(FLAG:現X):(FLAG:現Y) / 10 % 10 
;	CASE 0
;		RETURN 1
;	CASEELSE
;		RESULTS = ！
;ENDSELECT
;ELSE
	RESULTS = □
;ENDIF

@TILE_MARK_COMMON_81_9, ARG , ARG:1 , ARG:2
		RESULTS = Ｅ

;=======================================================================
;タイル調整
;=======================================================================
@MAKE_FLOOR_LINE_COMMON_81, ARG, ARG:1, ARG:2
#LOCALSIZE 30
;LOCAL:3 宝箱 ダンジョンフラグ:84~99
;LOCAL:4 イベント
;(0/0)でLOCALを消去
SIF ARG:1 == 0 && ARG:2 == 0
	VARSET LOCAL
SELECTCASE ARG
	CASE 3
		IF GETBIT(ダンジョンフラグ:(FLAG:現ダンジョン):(FLAG:現M+70), LOCAL:3)
			DA:(ARG:1):(ARG:2) = 1
		ELSE
			DA:(ARG:1):(ARG:2) = FLAG:現M *1000 + LOCAL:3 * 10 + 3
		ENDIF
		LOCAL:3++
	CASE 4
		DA:(ARG:1):(ARG:2) = FLAG:現M *1000 + LOCAL:4 * 10 + 4
		LOCAL:4++
	CASE 5
		;DA:(ARG:1):(ARG:2) = FLAG:現M *1000 + LOCAL:5 * 10 + 5
		;LOCAL:5++
	CASE 6
		DA:(ARG:1):(ARG:2) = FLAG:現M *1000 + LOCAL:6 * 10 + 6
		LOCAL:6++
	CASE 7
		DA:(ARG:1):(ARG:2) = FLAG:現M *1000 + LOCAL:7 * 10 + 7
		LOCAL:7++
	CASE 8
		DA:(ARG:1):(ARG:2) = FLAG:現M *1000 + LOCAL:8 * 10 + 8
		LOCAL:8++
	CASE 9
		DA:(ARG:1):(ARG:2) = FLAG:現M *1000 + LOCAL:9 * 10 + 9
		LOCAL:9++
ENDSELECT

;=======================================================================
;タイル定義
;=======================================================================
@DEFINE_TILES_81, ARGS, ARG, ARG:1
SELECTCASE ARGS
	CASE "a"
		RETURN 101
	CASE "A"
		RETURN 111
	CASE "b"
		RETURN 201
	CASE "B"
		RETURN 211
	CASE "c"
		RETURN 301
	CASE "C"
		RETURN 311
	CASE "e"
		RETURN 501
	CASE "E"
		RETURN 511
	CASE "f"
		RETURN 601
	CASE "F"
		RETURN 611
	CASE "g"
		RETURN 701
	CASE "G"
		RETURN 711
	CASE "h"
		RETURN 801
	CASE "H"
		RETURN 811
	CASE "i"
		RETURN 901
	CASE "I"
		RETURN 911
	CASE "j"
		RETURN 1001
	CASE "J"
		RETURN 1011
	CASE "k"
		RETURN 1101
	CASE "K"
		RETURN 1111
	CASE "l"
		RETURN 1201
	CASE "L"
		RETURN 1211
	CASE "m"
		RETURN 1301
	CASE "M"
		RETURN 1311
	CASE "n"
		RETURN 1401
	CASE "N"
		RETURN 1411
	CASE "o"
		RETURN 1501
	CASE "O"
		RETURN 1511
	CASE "p"
		RETURN 1601
	CASE "P"
		RETURN 1611
	CASE "q"
		RETURN 1701
	CASE "Q"
		RETURN 1711
	CASE "r"
		RETURN 1801
	CASE "R"
		RETURN 1811
	CASE "s"
		RETURN 1901
	CASE "S"
		RETURN 1911
	CASE "u"
		RETURN 2001
	CASE "U"
		RETURN 2011
	CASE "v"
		RETURN 2101
	CASE "V"
		RETURN 2111
	CASE "w"
		RETURN 2201
	CASE "W"
		RETURN 2211
	CASE "x"
		RETURN 2301
	CASE "X"
		RETURN 2311
	CASE "y"
		RETURN 2401
	CASE "Y"
		RETURN 2411

	CASE "^"
		RETURN 12
	CASE "_"
		RETURN 22
	CASE "<"
		RETURN 32
	CASE ">"
		RETURN 42
	CASE "~"
		RETURN 52

	CASE "@"
		RETURN 4

	CASE "!"
		RETURN 19
	CASE "#"
		RETURN 29
	CASE "$"
		RETURN 39
	CASE "%"
		RETURN 49
	CASE "&"
		RETURN 59
	CASE "'"
		RETURN 69
	CASE "("
		RETURN 79
	CASE ")"
		RETURN 89
	CASE "="
		RETURN 99
ENDSELECT

;=======================================================================
;[5]調べる　実行時のイベント
;=======================================================================
@EVENT_CHECK_DUNGEON_81
CALL EVENT_DUNGEON_81
RETURN RESULT

;=======================================================================
;タイル進入時のイベント
;=======================================================================
@EVENT_ENTER_DUNGEON_81,ARG
;ARG = 進入時の向き　0の場合ワープなど
CALL EVENT_DUNGEON_81, ARG , 0
RETURN RESULT

@EVENT_DUNGEON_81, ARG, ARG:1
SELECTCASE DA:(FLAG:現X):(FLAG:現Y) % 10
;==========
;ワープの処理
;==========
	CASE 1
	CALL FLOOR_81
	RETURN RESULT
;==========
;出口の処理
;==========
	CASE 8
		CALL DUNGEON_EXIT
	RETURN 1
;==========
;扉の処理
;==========
	CASE 2
		CALL DUNGEON_DOOR,ARG
		RETURN 1
;========
;宝の処理
;========
CASE 3
CALL TREASURE_81
RETURN 1

;=======
;階段
;=======
CASE 6
CALL UPSTAIRS_81
RETURN RESULT

CASE 7
CALL DOWNSTAIRS_81
RETURN RESULT
;==========
;イベント
;==========
	CASE 4
	IF FLAG:現M == 11
		IF ダンジョンフラグ:81:1 == 1
			CALL MESSAGE_WINDOW_D, "", "＞New Town Hall Mayor's office"
			;新市庁舎 市長室
			CALL MESSAGE_WINDOW_D, "Mayor Fujiwara", "N-no, I have nothing to do with it, I don't know anything!!"
			;藤原市長", "わ、わしは、何も関係無い、何も知らんのだ！！
			CALL MESSAGE_WINDOW_D, "Mayor Fujiwara", "No, don't hurt me!/All I did was approve the urban development/that was proposed by congressman Yamashiro!!"
			;命ばかりは、助けてくれえっ！！/わしはやつ、山城議員が進める都市開発をただただ承認しただけなんだ！！
			CALL MESSAGE_WINDOW_D, "Mayor Fujiwara", "He is currently in the capitol building./You can go there through the door opposite of mine./Here is the key to the door./Please, take this matter to him..."
			;やつは今、向かい側のドアから行ける市議会議事堂にいる。/ドアの鍵は、これだ。/渡すから見逃してくれ……。
			CALL MESSAGE_WINDOW_D, "", "/＞You got a key to the capitol./"
			;議事堂の鍵を手に入れた。
		ダンジョンフラグ:81:1 = 2
		ELSE
			CALL MESSAGE_WINDOW_D, "Mayor Fujiwara", "He is in the capitol. You can go there through the door opposite of mine./Just, don't hurt me..."
			;やつは、向かい側のドアから行ける市議会議事堂にいる。/だから、命だけは、助けてくれ……。
		ENDIF
	ELSE
		CALL MESSAGE_WINDOW_D, "", "＞New Town Hall Capitol"
		;＞新市庁舎 議事堂
		CALL MESSAGE_WINDOW_D, "Congressman Yamashiro", "Welcome, dog of the organisation./You did well defeating my subordinates so far."
		;山城議員", "ようこそ、組織の犬め。/よくもここまで私の配下を倒してくれたな。
		CALL MESSAGE_WINDOW_D, "Congressman Yamashiro", "That you where able to defeat them shows their incompetence,/still, their work is a cornerstone of my desire./They did their part for the new world I seek."
		;あいつらは犬一匹駆除できない無能どもだったが、/私の悲願の礎になったのだ、/新世界においても私の配下として使ってやるつもりだったのだがね。
		CALL MESSAGE_WINDOW_D, "Congressman Yamashiro", "And once Sid has destroyed the last seal,/this new world I long for will dawn."
		;シド・デイビスが最後の封印を解けば封印は消える。/そうすれば私の望む新世界はもはや目の前だ。
		CALL MESSAGE_WINDOW_D, "Congressman Yamashiro", "But for now, I'll be your opponent./You should feel honored."
		;では、私が君たちの相手をしてやろう。/君たちは、幸せだ。
		CALL MESSAGE_WINDOW_D, "Demiurge", "To get killed at the hand of the ruler of this new world../Once I gain the power of the sealed spirit,/I will complete the new world."
		;デミウルゴス", "大いなる怨霊の力を得、/完全な世界を創る新世界の神、/デミウルゴスの手に掛かるのだから。
		CALL MESSAGE_WINDOW_D, "", "＞1 Vile Demiurge appeared!"
		;邪神　デミウルゴス　が１体出た！
		FLAG:逃走不可フラグ = 1
		FLAG:会話不能フラグ = 1
		FLAG:先制不意打ちキャンセル = 1

		CALL SET_ENEMY,9,[[キャラ:デミウルゴス]],70,0,1
		CFLAG:(CHARANUM-1):ＨＰ補正 = 2000
		CFLAG:(CHARANUM-1):ＭＰ補正 = 10000
		CFLAG:(CHARANUM-1):行動回数 = 2
		CALL SYNC_STATUS,(CHARANUM-1)
		CALL HEALTH_CHARA,(CHARANUM-1)

		CALL BATTLE_START

		FLAG:逃走不可フラグ = 0
		FLAG:会話不能フラグ = 0
		FLAG:先制不意打ちキャンセル = 0
		CALL MESSAGE_WINDOW_D, "", "＞With the defeat of Demiurge,/＞those who betrayed the organisation by trying to revive Inaruna should be stopped."
		;デミウルゴスを倒したことでイナルナ姫を利用しようと組織を裏切った者達は粛清できた
		IF ダンジョンフラグ:78:1 == 1
			CALL MESSAGE_WINDOW_D, "", "＞However, even though Sid Davis wasn't the leader of this plan,/＞you feel a little anxious about him./＞What is he gonna do now...."
			;しかし、計画を実行していたシド・デイビスの姿が無いのに一抹の不安をあなたは覚えた/＞やつは何を狙っているのだろう……
		ELSEIF ダンジョンフラグ:78:1 == 2
			CALL MESSAGE_WINDOW_D, "", "＞However, there was no sign of the captured Kumiko and Sid Davis./＞It could be Sid will still try to revive Inaruna, even without his leader./＞You feel somewhat uneasy."
			;しかし、奴らにさらわれた久美子も計画を実行していたシド・デイビスの姿が無い/＞シド・デイビスは組織もデミウルゴスも関係無くイナルナ姫を復活させようとしているのかもしれない/＞あなたは一抹の不安を覚えた
		ENDIF
		CALL MESSAGE_WINDOW_D, "", "＞For defeating this traitor to the organisation,/＞you received ￥100000 and got 500 fame."
		;組織の不穏分子を排除したことにより、/＞報酬として口座に￥100000が支払われ、名声500を得た
		MONEY += 100000
		FLAG:名声 += 500
		ダンジョンフラグ:81:0 = 1
		FLAG:脱出 = 1
	ENDIF
RETURN 0

;========================
;エレベーター
;========================
	CASE 9
		SELECTCASE DA:(FLAG:現X):(FLAG:現Y) / 10
			;エレベーター
			CASE 1
				CALL DUNGEON_ELEVATOR, 19
			CASE 2
				CALL DUNGEON_ELEVATOR, 29
			CASE 3
				CALL DUNGEON_ELEVATOR, 39
			CASE 4
				CALL DUNGEON_ELEVATOR, 49
			CASE 5
				CALL DUNGEON_ELEVATOR, 59
			CASE 6
				CALL DUNGEON_ELEVATOR, 69
			CASE 7
				CALL DUNGEON_ELEVATOR, 79
			CASE 8
				CALL DUNGEON_ELEVATOR, 89
			CASE 9
				CALL DUNGEON_ELEVATOR, 99
		ENDSELECT
		RETURN 1
ENDSELECT
RETURN 0
;=======================================================================
;エレベーター定義
;=======================================================================
@DUNGEON_ELEVATOR_81, ARG
VARSET RESULT, -1
VARSET RESULTS
SELECTCASE ARG
	CASE 19
		RESULT:1 = 0
		RESULT:2 = 1
		RESULT:3 = 2
		RESULT:4 = 3
		RESULT:5 = 4
		RETURN -1
	CASE 29
		RESULT:1 = 1
		RESULT:2 = 4
		RETURN -1
	CASE 39
		RESULT:1 = 4
		RESULT:2 = 7
		RESULT:3 = 11
		RETURN -1
	CASE 49
		RESULT:1 = 1
		RESULT:2 = 4
		RETURN -1
	CASE 59
		RESULT:1 = 4
		RESULT:2 = 7
		RETURN -1
	CASE 69
		RESULT:1 = 0
		RESULT:2 = 1
		RESULT:3 = 2
		RETURN -1
	CASE 79
		RESULT:1 = 4
		RESULT:2 = 5
		RESULT:3 = 6
		RESULT:4 = 7
		RETURN -1
	CASE 89
		RESULT:1 = 5
		RESULT:2 = 6
		RESULT:3 = 7
		RESULT:4 = 8
		RETURN -1
	CASE 99
		RESULT:1 = 8
		RESULT:2 = 9
		RESULT:3 = 10
		RESULT:4 = 11
		RETURN -1
ENDSELECT

;=======================================================================
;階段置き場
;=======================================================================
@UPSTAIRS_81
;位置とIDが対応しているはずなので、同IDの階段を探させれば良い
SELECTCASE FLAG:現M
	CASEELSE
		CALL DUNGEON_UPSTAIRS_ID, FLAG:現M+1 , DA:(FLAG:現X):(FLAG:現Y) + 1000 + 1
ENDSELECT
RETURN 1

@DOWNSTAIRS_81
SELECTCASE FLAG:現M
	CASEELSE
		CALL DUNGEON_DOWNSTAIRS_ID, FLAG:現M-1 , DA:(FLAG:現X):(FLAG:現Y) - 1000 - 1
ENDSELECT
RETURN 1

;-----------------------------------------------------------------------
;タイルイベント
;-----------------------------------------------------------------------
@FLOOR_81, ARG
SELECTCASE DA:(FLAG:現X):(FLAG:現Y) / 10 % 10 
	CASE 0
		RETURN 0
	CASEELSE
		CALL MESSAGE_WINDOW_D, "", "＞Warp zone!"
		LOCAL = DA:(FLAG:現X):(FLAG:現Y) / 10 % 10 ? DA:(FLAG:現X):(FLAG:現Y) -10 # DA:(FLAG:現X):(FLAG:現Y) + 10
			SELECTCASE DA:(FLAG:現X):(FLAG:現Y) / 10
				CASE 51 , 151 , 161
					LOCAL:1 = (FLAG:現M - 2)
				CASE 101 , 171 , 181 , 191 , 201 , 211, 221, 231, 241
					LOCAL:1 = FLAG:現M
				CASEELSE
					LOCAL:1 = DA:(FLAG:現X):(FLAG:現Y) / 10 % 10 ? FLAG:現M - 1 # FLAG:現M + 1
				ENDSELECT
		CALL SHOW_PICTURE, "EMPTY"
		CALL DUNGEON_WORP_ID, LOCAL:1, LOCAL, 1
ENDSELECT

;=======================================================================
;宝箱の中身
;=======================================================================
@TREASURE_81
#LOCALSIZE 10
LOCAL = FLAG:現M + 70
LOCAL:1 = (DA:(FLAG:現X):(FLAG:現Y) / 10) % 100
SELECTCASE DA:(FLAG:現X):(FLAG:現Y) / 10
	;マップ番号*100+そのマップで何番目の宝箱かを示す数値でどの宝箱かを判別します。
	;例えば0の場合、0版のマップの0番目の宝箱であることを表しています。
	CASE 0
		CALL GET_TREASURE, [[アイテム:ChakraPot]] , 1 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 1
		CALL GET_TREASURE, [[アイテム:CoreShield]] , 1 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 100
		CALL GET_TREASURE, [[アイテム:Soma]] , 1 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 101
		CALL GET_TREASURE, [[アイテム:Daybreak Armor]] , 1 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 300
		CALL GET_TREASURE, [[アイテム:OxBezoar]] , 2 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 400
		CALL GET_TREASURE, [[アイテム:Dis-Charm]] , 1 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 401
		CALL GET_TREASURE, [[アイテム:Life stone]] , 1 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 402
		CALL GET_TREASURE, [[アイテム:Life stone]] , 1 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 1100
		CALL GET_TREASURE_MONEY, 0 , 60000 , FLAG:現ダンジョン, LOCAL , LOCAL:1
	CASE 1101
		CALL GET_TREASURE_MONEY, 0 , 30000 , FLAG:現ダンジョン, LOCAL , LOCAL:1
ENDSELECT
RETURN 1

;=======================================================================
;エンカウント率
;=======================================================================
@ENCOUNT_RATE_81
		FLAG:エンカウント率 = 15 + FLAG:未遭遇歩数*5
SIF FLAG:未遭遇歩数 < 5
	FLAG:エンカウント率 = 0
;=======================================================================
;必要レベル目安
;推奨LV 雑魚最低LV 雑魚最高LV ボスLV 
;=======================================================================
@GET_DUNGEON_LV_81
RETURN 50, 51, 57, 100 

;=======================================================================
;エンカウント処理
;=======================================================================
@CHECK_ENCOUNT_81
IF RAND:100 < FLAG:エンカウント率
	CALL ENEMY_TABLE
	RETURN 1
ELSE
	FLAG:未遭遇歩数 += 1
	RETURN 0
ENDIF


;=======================================================================
;敵の種族の種類数
;=======================================================================
@CLASS_NUM_81
	RETURN CLASS_NUM_COMMON("最上級")

;=======================================================================
;敵の総数
;ARGは出現する敵の種類です
;=======================================================================
@ENEMY_NUM_81, ARG
	RETURN ENEMY_NUM_COMMON("最上級", ARG)
;=======================================================================
;敵の種類
;=======================================================================
@ENEMY_81, ARG
	SELECTCASE RAND:14
		CASE IS < 1
			RETURN [[キャラ:ペリ]], 51
		CASE IS < 2
			RETURN [[キャラ:ダーキニー]], 51
		CASE IS < 3
			RETURN [[キャラ:ドミニオン]], 52
		CASE IS < 4
			RETURN [[キャラ:ヤクシャ]], 52
		CASE IS < 5
			RETURN [[キャラ:カトブレパス]], 52
		CASE IS < 6
			RETURN [[キャラ:ムシュフシュ]], 58
		CASE IS < 7
			RETURN [[キャラ:ティターン]], 53
		CASE IS < 8
			RETURN [[キャラ:アンズー]], 53
		CASE IS < 9
			RETURN [[キャラ:ルフ]], 54
		CASE IS < 10
			RETURN [[キャラ:ヴェータラ]], 54
		CASE IS < 11
			RETURN [[キャラ:ギリメカラ]], 53
		CASE IS < 12
			RETURN [[キャラ:ケルベロス]], 55
		CASE IS < 13
			RETURN [[キャラ:ボティス]], 56
		CASE IS < 14
			RETURN [[キャラ:オベロン]], 57
		ENDSELECT	
;=======================================================================
;輪姦参加悪魔
;=======================================================================
@DUNGEON_RAPE_DEVIL_81
;ランダムにどの悪魔が出るか決定
;RETURN CSV番号 , 人数 , レベル
SELECTCASE RAND:3
	CASE 0
		RETURN [[キャラ:ヴェータラ]] , 3 + RAND:10 , CSVBASE([[キャラ:ヴェータラ]] , GETNUM(BASE , "LV") , 0) + RAND:3
	CASE 1
		RETURN [[キャラ:アンズー]] , 3 + RAND:10 , CSVBASE([[キャラ:アンズー]] , GETNUM(BASE , "LV") , 0) + RAND:3
	CASE 2
		RETURN [[キャラ:ヤクシャ]] , 3 + RAND:10 , CSVBASE([[キャラ:ヤクシャ]] , GETNUM(BASE , "LV") , 0) + RAND:3
ENDSELECT